{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/remote_business/options_course_platform/options-course-platform-app/src/candlestick_overlay_analyzer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Upload, TrendingUp, TrendingDown, Target, FileText, Zap, Copy, CheckCircle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CandlestickOverlayAnalyzer = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [analysisText, setAnalysisText] = useState('');\n  const [overlays, setOverlays] = useState([]);\n  const [selectedTool, setSelectedTool] = useState('buy');\n  const [showAnalysis, setShowAnalysis] = useState(false);\n  const [parseError, setParseError] = useState('');\n  const [copySuccess, setCopySuccess] = useState(false);\n  const [groupedOverlays, setGroupedOverlays] = useState({});\n  const canvasRef = useRef(null);\n  const promptTextRef = useRef(null);\n\n  // Updated example with grouped analysis\n  const exampleAnalysis = `CANDLESTICK_ANALYSIS:\n\nGROUP: EARLY_RALLY_PHASE\nPHASE_DESCRIPTION: Initial uptrend and first resistance test (April-May)\nBUY_SIGNAL: x=8, y=35, label=\"Early Rally Buy\", description=\"Breakout above 212 resistance with volume\", date=\"Apr 29 - May 6\"\nBUY_SIGNAL: x=18, y=25, label=\"Major Breakout\", description=\"Explosive move 214→219, strong bullish engulfing\", date=\"2-3 bars after May 13\"\nSELL_SIGNAL: x=25, y=30, label=\"Take Profit Zone\", description=\"Resistance rejection at 219-220 level\", date=\"Around May 20\"\nRESISTANCE_LEVEL: x=20, y=18, label=\"First Resistance\", description=\"219-220 level, multiple rejections\", date=\"May 15-20 period\"\n\nGROUP: CONSOLIDATION_PHASE\nPHASE_DESCRIPTION: Pullback and support formation (Late May-Early June)\nSUPPORT_LEVEL: x=30, y=40, label=\"Pullback Support\", description=\"215-216 area holds, previous resistance becomes support\", date=\"May 28 area\"\nBUY_SIGNAL: x=35, y=25, label=\"Second Rally Attempt\", description=\"Breaking above 218 with volume confirmation\", date=\"2-3 bars after Jun 4\"\n\nGROUP: FAILURE_PHASE\nPHASE_DESCRIPTION: Major reversal and breakdown (Mid June)\nSELL_SIGNAL: x=45, y=20, label=\"Failed Breakout\", description=\"Major reversal from 220, shooting star pattern\", date=\"Around Jun 11\"\nRESISTANCE_LEVEL: x=45, y=15, label=\"Major Resistance\", description=\"220 level proves too strong, heavy selling\", date=\"Jun 11 peak\"\nSELL_SIGNAL: x=50, y=35, label=\"Breakdown Confirmation\", description=\"Close below 215 support, trend break\", date=\"Mid-June decline\"\n\nGROUP: RECOVERY_PHASE\nPHASE_DESCRIPTION: Support hold and new rally (Late June-July)\nSUPPORT_LEVEL: x=55, y=70, label=\"Key Support\", description=\"210 level holds strong, multiple hammer patterns\", date=\"Jun 26 - Jul 5\"\nBUY_SIGNAL: x=58, y=65, label=\"Recovery Buy\", description=\"Bullish engulfing pattern off 210 support\", date=\"2-3 bars after Jun 26\"\nBUY_SIGNAL: x=65, y=45, label=\"Momentum Buy\", description=\"Break above 215, reclaiming previous support\", date=\"Early July\"\n\nGROUP: CURRENT_PHASE\nPHASE_DESCRIPTION: Testing new resistance levels (Recent)\nBUY_SIGNAL: x=75, y=30, label=\"Breakout Buy\", description=\"Push above 220 resistance, volume expansion\", date=\"Jul 11 onwards\"\nRESISTANCE_LEVEL: x=85, y=12, label=\"Current Resistance\", description=\"224-225 area, testing new highs\", date=\"Jul 18 current\"\nSUPPORT_LEVEL: x=75, y=25, label=\"New Support\", description=\"220 level now support, role reversal\", date=\"Current level\"\n\nGROUP: VOLUME_CONFIRMATION\nPHASE_DESCRIPTION: Volume analysis and confirmation signals\nBUY_SIGNAL: x=18, y=80, label=\"Volume Breakout\", description=\"High volume bar confirms major breakout\", date=\"May 15 area volume\"\nSELL_SIGNAL: x=45, y=85, label=\"Volume Selling\", description=\"Heavy volume on breakdown, distribution\", date=\"Jun 11 volume spike\"\nBUY_SIGNAL: x=58, y=90, label=\"Volume Recovery\", description=\"Increasing volume on bounce from support\", date=\"Late June volume\"`;\n  const llmPrompt = `Please analyze this candlestick chart and provide buy/sell signals organized in logical groups using this EXACT format:\n\nCANDLESTICK_ANALYSIS:\n\nGROUP: [PHASE_NAME]\nPHASE_DESCRIPTION: [Brief description of what's happening in this phase]\nBUY_SIGNAL: x=[0-100], y=[0-100], label=\"[Signal Name]\", description=\"[Technical details]\", date=\"[Time period]\"\nSELL_SIGNAL: x=[0-100], y=[0-100], label=\"[Signal Name]\", description=\"[Technical details]\", date=\"[Time period]\"\nRESISTANCE_LEVEL: x=[0-100], y=[0-100], label=\"[Level Name]\", description=\"[Technical details]\", date=\"[Time period]\"\nSUPPORT_LEVEL: x=[0-100], y=[0-100], label=\"[Level Name]\", description=\"[Technical details]\", date=\"[Time period]\"\n\nIMPORTANT INSTRUCTIONS:\n• Coordinates: x,y are percentages (0-100) from top-left of image\n• x=0 is left edge, x=100 is right edge\n• y=0 is top edge, y=100 is bottom edge\n• Group similar timeframe signals together\n• Typical groups: EARLY_RALLY_PHASE, CONSOLIDATION_PHASE, FAILURE_PHASE, RECOVERY_PHASE, CURRENT_PHASE, VOLUME_CONFIRMATION, BREAKOUT_PHASE, DISTRIBUTION_PHASE\n• Look for: breakouts, reversals, support/resistance bounces, volume spikes\n• Include 3-6 groups with 2-4 signals each for comprehensive analysis\n• Focus on the most significant trading opportunities and key levels\n\nSave your response as a .txt file and upload it to the analyzer.`;\n  const handleImageUpload = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        var _e$target;\n        if ((_e$target = e.target) !== null && _e$target !== void 0 && _e$target.result) setImage(e.target.result);\n        setOverlays([]);\n        setGroupedOverlays({});\n        setParseError('');\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleAnalysisUpload = event => {\n    var _event$target$files2;\n    const file = (_event$target$files2 = event.target.files) === null || _event$target$files2 === void 0 ? void 0 : _event$target$files2[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        var _e$target2;\n        if ((_e$target2 = e.target) !== null && _e$target2 !== void 0 && _e$target2.result) setAnalysisText(e.target.result);\n        setParseError('');\n      };\n      reader.readAsText(file);\n    }\n  };\n  const parseLLMAnalysis = text => {\n    try {\n      const lines = text.split('\\n').filter(line => line.trim());\n      const parsedOverlays = [];\n      const groups = {};\n      let currentGroup = '';\n      let currentPhaseDescription = '';\n      let id = 1;\n      lines.forEach(line => {\n        line = line.trim();\n\n        // Skip headers or empty lines\n        if (line.startsWith('CANDLESTICK_ANALYSIS:') || !line) return;\n\n        // Parse group headers\n        if (line.startsWith('GROUP:')) {\n          currentGroup = line.replace('GROUP:', '').trim();\n          groups[currentGroup] = {\n            description: '',\n            signals: []\n          };\n          return;\n        }\n\n        // Parse phase descriptions\n        if (line.startsWith('PHASE_DESCRIPTION:')) {\n          currentPhaseDescription = line.replace('PHASE_DESCRIPTION:', '').trim();\n          if (currentGroup && groups[currentGroup]) {\n            groups[currentGroup].description = currentPhaseDescription;\n          }\n          return;\n        }\n\n        // Parse signal types\n        let type = '';\n        if (line.startsWith('BUY_SIGNAL:')) {\n          type = 'buy';\n          line = line.replace('BUY_SIGNAL:', '').trim();\n        } else if (line.startsWith('SELL_SIGNAL:')) {\n          type = 'sell';\n          line = line.replace('SELL_SIGNAL:', '').trim();\n        } else if (line.startsWith('RESISTANCE_LEVEL:')) {\n          type = 'resistance';\n          line = line.replace('RESISTANCE_LEVEL:', '').trim();\n        } else if (line.startsWith('SUPPORT_LEVEL:')) {\n          type = 'support';\n          line = line.replace('SUPPORT_LEVEL:', '').trim();\n        } else {\n          return; // Skip unrecognized lines\n        }\n\n        // Parse parameters using regex\n        const xMatch = line.match(/x=(\\d+(?:\\.\\d+)?)/);\n        const yMatch = line.match(/y=(\\d+(?:\\.\\d+)?)/);\n        const labelMatch = line.match(/label=\"([^\"]+)\"/);\n        const descMatch = line.match(/description=\"([^\"]+)\"/);\n        const dateMatch = line.match(/date=\"([^\"]+)\"/);\n        if (xMatch && yMatch) {\n          const signal = {\n            id: id++,\n            type: type,\n            x: parseFloat(xMatch[1]),\n            y: parseFloat(yMatch[1]),\n            label: labelMatch ? labelMatch[1] : `${type.toUpperCase()} Signal`,\n            description: descMatch ? descMatch[1] : 'LLM Analysis',\n            date: dateMatch ? dateMatch[1] : 'Auto-detected',\n            group: currentGroup\n          };\n          parsedOverlays.push(signal);\n          if (currentGroup && groups[currentGroup]) {\n            groups[currentGroup].signals.push(signal);\n          }\n        }\n      });\n      setGroupedOverlays(groups);\n      return parsedOverlays;\n    } catch (error) {\n      throw new Error(`Parsing failed: ${error.message}`);\n    }\n  };\n  const processLLMAnalysis = () => {\n    try {\n      setParseError('');\n      const parsedOverlays = parseLLMAnalysis(analysisText);\n      if (parsedOverlays.length === 0) {\n        throw new Error('No valid signals found in analysis text');\n      }\n      setOverlays(parsedOverlays);\n      setShowAnalysis(true);\n    } catch (error) {\n      setParseError(error.message);\n    }\n  };\n  const loadExampleAnalysis = () => {\n    setAnalysisText(exampleAnalysis);\n  };\n  const copyPromptToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(llmPrompt);\n      setCopySuccess(true);\n      setTimeout(() => setCopySuccess(false), 2000);\n    } catch (err) {\n      console.error('Failed to copy text: ', err);\n    }\n  };\n  const handleCanvasClick = event => {\n    if (!image) return;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const x = (event.clientX - rect.left) * scaleX;\n    const y = (event.clientY - rect.top) * scaleY;\n    const xPercent = x / canvas.width * 100;\n    const yPercent = y / canvas.height * 100;\n    const newOverlay = {\n      id: Date.now(),\n      type: selectedTool,\n      x: xPercent,\n      y: yPercent,\n      label: `${selectedTool.toUpperCase()} Signal`,\n      description: 'User added marker',\n      date: 'Manual',\n      group: 'MANUAL'\n    };\n    setOverlays([...overlays, newOverlay]);\n  };\n  const clearAll = () => {\n    setOverlays([]);\n    setGroupedOverlays({});\n    setShowAnalysis(false);\n    setAnalysisText('');\n    setParseError('');\n  };\n  const removeOverlay = id => {\n    setOverlays(overlays.filter(overlay => overlay.id !== id));\n  };\n  useEffect(() => {\n    if (image && canvasRef.current) {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const ctx = canvas.getContext('2d');\n      if (!ctx) return;\n      const img = new Image();\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n\n        // Draw overlays\n        overlays.forEach(overlay => {\n          const x = overlay.x / 100 * canvas.width;\n          const y = overlay.y / 100 * canvas.height;\n          ctx.save();\n\n          // Draw marker based on type\n          if (overlay.type === 'buy') {\n            ctx.fillStyle = '#10B981';\n            ctx.strokeStyle = '#065F46';\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.moveTo(x, y - 15);\n            ctx.lineTo(x - 8, y - 5);\n            ctx.lineTo(x - 4, y - 5);\n            ctx.lineTo(x - 4, y + 5);\n            ctx.lineTo(x + 4, y + 5);\n            ctx.lineTo(x + 4, y - 5);\n            ctx.lineTo(x + 8, y - 5);\n            ctx.closePath();\n            ctx.fill();\n            ctx.stroke();\n            ctx.fillStyle = 'white';\n            ctx.font = 'bold 10px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText('BUY', x, y + 1);\n          } else if (overlay.type === 'sell') {\n            ctx.fillStyle = '#EF4444';\n            ctx.strokeStyle = '#7F1D1D';\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.moveTo(x, y + 15);\n            ctx.lineTo(x - 8, y + 5);\n            ctx.lineTo(x - 4, y + 5);\n            ctx.lineTo(x - 4, y - 5);\n            ctx.lineTo(x + 4, y - 5);\n            ctx.lineTo(x + 4, y + 5);\n            ctx.lineTo(x + 8, y + 5);\n            ctx.closePath();\n            ctx.fill();\n            ctx.stroke();\n            ctx.fillStyle = 'white';\n            ctx.font = 'bold 10px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText('SELL', x, y + 1);\n          } else if (overlay.type === 'resistance' || overlay.type === 'support') {\n            const color = overlay.type === 'resistance' ? '#F59E0B' : '#8B5CF6';\n            ctx.strokeStyle = color;\n            ctx.lineWidth = 3;\n            ctx.setLineDash([10, 5]);\n            ctx.beginPath();\n            ctx.moveTo(0, y);\n            ctx.lineTo(canvas.width, y);\n            ctx.stroke();\n            ctx.fillStyle = color;\n            ctx.font = 'bold 12px Arial';\n            ctx.textAlign = 'left';\n            ctx.setLineDash([]);\n            ctx.fillText(overlay.type.toUpperCase(), x + 10, y - 5);\n          }\n          ctx.restore();\n        });\n      };\n      img.src = image;\n    }\n  }, [image, overlays]);\n  const MarkerButton = ({\n    type,\n    icon: Icon,\n    label,\n    active\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => setSelectedTool(type),\n    className: `flex items-center gap-2 px-4 py-2 rounded-lg border transition-colors ${active ? 'bg-blue-100 border-blue-500 text-blue-700' : 'bg-white border-gray-300 hover:bg-gray-50'}`,\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      size: 16\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto p-6 bg-gray-50 min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl shadow-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-800 mb-2\",\n        children: \"\\uD83E\\uDD16 Automated Candlestick Chart Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Workflow:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), \" 1) Copy LLM prompt \\u2192 2) Upload chart \\u2192 3) Upload analysis \\u2192 4) Get overlays\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-yellow-800 mb-3\",\n          children: \"\\uD83E\\uDDE0 Step 1: LLM Instructions for Chart Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-yellow-700\",\n            children: \"Copy the prompt below and use it with your favorite LLM (ChatGPT, Claude, etc.):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-semibold text-yellow-800\",\n                children: \"LLM Instructions (Copy this entire prompt):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: copyPromptToClipboard,\n                className: \"flex items-center gap-1 px-3 py-1 bg-yellow-200 text-yellow-800 rounded hover:bg-yellow-300 transition-colors text-sm\",\n                children: copySuccess ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 23\n                  }, this), \"Copied!\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Copy, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 23\n                  }, this), \"Copy Prompt\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: promptTextRef,\n              value: llmPrompt,\n              readOnly: true,\n              className: \"w-full h-64 p-3 text-xs font-mono bg-white border border-yellow-300 rounded resize-none overflow-y-auto focus:outline-none focus:ring-2 focus:ring-yellow-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 bg-yellow-100 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-semibold text-yellow-800 mb-2\",\n              children: \"Usage Instructions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"list-decimal list-inside text-yellow-700 text-sm space-y-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Copy the entire prompt above using the Copy button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Go to ChatGPT, Claude, or any other LLM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Upload your candlestick chart image to the LLM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Paste the copied prompt and submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Save the LLM's response as a .txt file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Then upload both your chart and the .txt file below\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 p-4 bg-blue-50 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-blue-800 mb-2\",\n          children: \"\\uD83C\\uDFAF Key Benefits of Grouped Analysis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-blue-700 space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Logical Organization:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 16\n            }, this), \" Signals are grouped by market phases (Rally, Consolidation, Failure, Recovery, etc.)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Better Context:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 16\n            }, this), \" Each group has a description explaining what's happening in that phase\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Complete Story:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 16\n            }, this), \" Shows the full narrative of price action from start to current\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Strategic Trading:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 16\n            }, this), \" Helps identify which phase the market is in for better decision making\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 p-3 bg-blue-100 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-semibold text-blue-800\",\n              children: \"Example Groups:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-blue-700\",\n              children: \"EARLY_RALLY_PHASE \\u2192 CONSOLIDATION_PHASE \\u2192 FAILURE_PHASE \\u2192 RECOVERY_PHASE \\u2192 CURRENT_PHASE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid md:grid-cols-2 gap-6 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-700 mb-3\",\n            children: \"\\uD83D\\uDCCA Step 2: Upload Chart Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex flex-col items-center justify-center w-full h-32 border-2 border-dashed border-gray-300 rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col items-center justify-center pt-5 pb-6\",\n              children: [/*#__PURE__*/_jsxDEV(Upload, {\n                className: \"w-6 h-6 mb-2 text-gray-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-500\",\n                children: \"Upload candlestick chart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-500\",\n                children: \"JPEG, PNG supported\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"hidden\",\n              accept: \"image/*\",\n              onChange: handleImageUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-700 mb-3\",\n            children: \"\\uD83E\\uDD16 Step 3: Upload LLM Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex flex-col items-center justify-center w-full h-32 border-2 border-dashed border-green-300 rounded-lg cursor-pointer bg-green-50 hover:bg-green-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col items-center justify-center pt-5 pb-6\",\n              children: [/*#__PURE__*/_jsxDEV(FileText, {\n                className: \"w-6 h-6 mb-2 text-green-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-green-600\",\n                children: \"Upload LLM analysis file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-green-500\",\n                children: \"TXT file with grouped signals\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"hidden\",\n              accept: \".txt\",\n              onChange: handleAnalysisUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), analysisText && image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-green-50 border border-green-200 rounded-lg mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-green-800 mb-2\",\n            children: \"\\u2705 Step 4: Ready to Generate Overlays\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-700 text-sm mb-3\",\n            children: \"Both chart and grouped analysis are uploaded. Click below to automatically generate organized buy/sell overlays!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: processLLMAnalysis,\n          className: \"flex items-center gap-2 px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-semibold\",\n          children: [/*#__PURE__*/_jsxDEV(Zap, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this), \"\\uD83D\\uDE80 Process Grouped LLM Analysis & Generate Overlays\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this), parseError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-600 text-sm mt-2\",\n          children: [\"\\u274C \", parseError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 11\n      }, this), image && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-700 mb-3\",\n            children: \"Manual Tools (Optional):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-3 flex-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(MarkerButton, {\n              type: \"buy\",\n              icon: TrendingUp,\n              label: \"Buy Signal\",\n              active: selectedTool === 'buy'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MarkerButton, {\n              type: \"sell\",\n              icon: TrendingDown,\n              label: \"Sell Signal\",\n              active: selectedTool === 'sell'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MarkerButton, {\n              type: \"resistance\",\n              icon: Target,\n              label: \"Support/Resistance\",\n              active: selectedTool === 'resistance'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearAll,\n              className: \"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\",\n              children: \"Clear All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            onClick: handleCanvasClick,\n            className: \"max-w-full h-auto border border-gray-300 rounded-lg cursor-crosshair shadow-md\",\n            style: {\n              maxHeight: '600px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this), Object.keys(groupedOverlays).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 rounded-lg p-4 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-700 mb-4\",\n            children: [\"\\uD83D\\uDCCA Grouped Analysis Results (\", overlays.length, \" total signals)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 17\n          }, this), Object.entries(groupedOverlays).map(([groupName, groupData]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 p-4 bg-white rounded-lg border\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-bold text-gray-800 text-lg\",\n                children: groupName.replace(/_/g, ' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600 text-sm italic\",\n                children: groupData.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: groupData.signals.map(signal => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between bg-gray-50 p-3 rounded border\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `w-3 h-3 rounded-full ${signal.type === 'buy' ? 'bg-green-500' : signal.type === 'sell' ? 'bg-red-500' : signal.type === 'resistance' ? 'bg-orange-500' : 'bg-purple-500'}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 585,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-semibold text-gray-800\",\n                      children: signal.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 591,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-gray-600\",\n                      children: [signal.description, \" \\u2022 \", signal.date]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 594,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-xs text-gray-500\",\n                      children: [\"Position: \", signal.x.toFixed(1), \"%, \", signal.y.toFixed(1), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 597,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 590,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => removeOverlay(signal.id),\n                  className: \"text-red-500 hover:text-red-700 text-sm px-2 py-1 rounded\",\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 27\n                }, this)]\n              }, signal.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 21\n            }, this)]\n          }, groupName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 15\n        }, this), overlays.length > 0 && Object.keys(groupedOverlays).length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 rounded-lg p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-700 mb-3\",\n            children: [\"\\uD83D\\uDCCA Analysis Results (\", overlays.length, \" signals detected)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: overlays.map(overlay => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between bg-white p-3 rounded-lg border\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `w-3 h-3 rounded-full ${overlay.type === 'buy' ? 'bg-green-500' : overlay.type === 'sell' ? 'bg-red-500' : overlay.type === 'resistance' ? 'bg-orange-500' : 'bg-purple-500'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-semibold text-gray-800\",\n                    children: overlay.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 635,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-600\",\n                    children: [overlay.description, \" \\u2022 \", overlay.date]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 638,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-500\",\n                    children: [\"Position: \", overlay.x.toFixed(1), \"%, \", overlay.y.toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 641,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeOverlay(overlay.id),\n                className: \"text-red-500 hover:text-red-700 text-sm px-2 py-1 rounded\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 23\n              }, this)]\n            }, overlay.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 5\n  }, this);\n};\n_s(CandlestickOverlayAnalyzer, \"I/w8IvhN5iRB22bXkZH/zjn1ILY=\");\n_c = CandlestickOverlayAnalyzer;\nexport default CandlestickOverlayAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"CandlestickOverlayAnalyzer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Upload","TrendingUp","TrendingDown","Target","FileText","Zap","Copy","CheckCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","CandlestickOverlayAnalyzer","_s","image","setImage","analysisText","setAnalysisText","overlays","setOverlays","selectedTool","setSelectedTool","showAnalysis","setShowAnalysis","parseError","setParseError","copySuccess","setCopySuccess","groupedOverlays","setGroupedOverlays","canvasRef","promptTextRef","exampleAnalysis","llmPrompt","handleImageUpload","event","_event$target$files","file","target","files","reader","FileReader","onload","e","_e$target","result","readAsDataURL","handleAnalysisUpload","_event$target$files2","_e$target2","readAsText","parseLLMAnalysis","text","lines","split","filter","line","trim","parsedOverlays","groups","currentGroup","currentPhaseDescription","id","forEach","startsWith","replace","description","signals","type","xMatch","match","yMatch","labelMatch","descMatch","dateMatch","signal","x","parseFloat","y","label","toUpperCase","date","group","push","error","Error","message","processLLMAnalysis","length","loadExampleAnalysis","copyPromptToClipboard","navigator","clipboard","writeText","setTimeout","err","console","handleCanvasClick","canvas","current","rect","getBoundingClientRect","scaleX","width","scaleY","height","clientX","left","clientY","top","xPercent","yPercent","newOverlay","Date","now","clearAll","removeOverlay","overlay","ctx","getContext","img","Image","drawImage","save","fillStyle","strokeStyle","lineWidth","beginPath","moveTo","lineTo","closePath","fill","stroke","font","textAlign","fillText","color","setLineDash","restore","src","MarkerButton","icon","Icon","active","onClick","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","ref","value","readOnly","accept","onChange","style","maxHeight","Object","keys","entries","map","groupName","groupData","toFixed","_c","$RefreshReg$"],"sources":["/home/ec2-user/remote_business/options_course_platform/options-course-platform-app/src/candlestick_overlay_analyzer.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Upload, TrendingUp, TrendingDown, Target, FileText, Zap, Copy, CheckCircle } from 'lucide-react';\n\n\ninterface Overlay {\n  id: number;\n  type: string;\n  x: number;\n  y: number;\n  label: string;\n  description: string;\n  date: string;\n  group: string;\n}\n\ninterface GroupData {\n  description: string;\n  signals: Overlay[];\n}\n\ninterface GroupedOverlays {\n  [key: string]: GroupData;\n}\n\ninterface MarkerButtonProps {\n  type: string;\n  icon: React.ElementType;\n  label: string;\n  active: boolean;\n}\nconst CandlestickOverlayAnalyzer = () => {\n  const [image, setImage] = useState<string | null>(null);\n  const [analysisText, setAnalysisText] = useState<string>('');\n  const [overlays, setOverlays] = useState<Overlay[]>([]);\n  const [selectedTool, setSelectedTool] = useState<string>('buy');\n  const [showAnalysis, setShowAnalysis] = useState<boolean>(false);\n  const [parseError, setParseError] = useState<string>('');\n  const [copySuccess, setCopySuccess] = useState<boolean>(false);\n  const [groupedOverlays, setGroupedOverlays] = useState<GroupedOverlays>({});\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const promptTextRef = useRef<HTMLTextAreaElement>(null);\n\n  // Updated example with grouped analysis\n  const exampleAnalysis = `CANDLESTICK_ANALYSIS:\n\nGROUP: EARLY_RALLY_PHASE\nPHASE_DESCRIPTION: Initial uptrend and first resistance test (April-May)\nBUY_SIGNAL: x=8, y=35, label=\"Early Rally Buy\", description=\"Breakout above 212 resistance with volume\", date=\"Apr 29 - May 6\"\nBUY_SIGNAL: x=18, y=25, label=\"Major Breakout\", description=\"Explosive move 214→219, strong bullish engulfing\", date=\"2-3 bars after May 13\"\nSELL_SIGNAL: x=25, y=30, label=\"Take Profit Zone\", description=\"Resistance rejection at 219-220 level\", date=\"Around May 20\"\nRESISTANCE_LEVEL: x=20, y=18, label=\"First Resistance\", description=\"219-220 level, multiple rejections\", date=\"May 15-20 period\"\n\nGROUP: CONSOLIDATION_PHASE\nPHASE_DESCRIPTION: Pullback and support formation (Late May-Early June)\nSUPPORT_LEVEL: x=30, y=40, label=\"Pullback Support\", description=\"215-216 area holds, previous resistance becomes support\", date=\"May 28 area\"\nBUY_SIGNAL: x=35, y=25, label=\"Second Rally Attempt\", description=\"Breaking above 218 with volume confirmation\", date=\"2-3 bars after Jun 4\"\n\nGROUP: FAILURE_PHASE\nPHASE_DESCRIPTION: Major reversal and breakdown (Mid June)\nSELL_SIGNAL: x=45, y=20, label=\"Failed Breakout\", description=\"Major reversal from 220, shooting star pattern\", date=\"Around Jun 11\"\nRESISTANCE_LEVEL: x=45, y=15, label=\"Major Resistance\", description=\"220 level proves too strong, heavy selling\", date=\"Jun 11 peak\"\nSELL_SIGNAL: x=50, y=35, label=\"Breakdown Confirmation\", description=\"Close below 215 support, trend break\", date=\"Mid-June decline\"\n\nGROUP: RECOVERY_PHASE\nPHASE_DESCRIPTION: Support hold and new rally (Late June-July)\nSUPPORT_LEVEL: x=55, y=70, label=\"Key Support\", description=\"210 level holds strong, multiple hammer patterns\", date=\"Jun 26 - Jul 5\"\nBUY_SIGNAL: x=58, y=65, label=\"Recovery Buy\", description=\"Bullish engulfing pattern off 210 support\", date=\"2-3 bars after Jun 26\"\nBUY_SIGNAL: x=65, y=45, label=\"Momentum Buy\", description=\"Break above 215, reclaiming previous support\", date=\"Early July\"\n\nGROUP: CURRENT_PHASE\nPHASE_DESCRIPTION: Testing new resistance levels (Recent)\nBUY_SIGNAL: x=75, y=30, label=\"Breakout Buy\", description=\"Push above 220 resistance, volume expansion\", date=\"Jul 11 onwards\"\nRESISTANCE_LEVEL: x=85, y=12, label=\"Current Resistance\", description=\"224-225 area, testing new highs\", date=\"Jul 18 current\"\nSUPPORT_LEVEL: x=75, y=25, label=\"New Support\", description=\"220 level now support, role reversal\", date=\"Current level\"\n\nGROUP: VOLUME_CONFIRMATION\nPHASE_DESCRIPTION: Volume analysis and confirmation signals\nBUY_SIGNAL: x=18, y=80, label=\"Volume Breakout\", description=\"High volume bar confirms major breakout\", date=\"May 15 area volume\"\nSELL_SIGNAL: x=45, y=85, label=\"Volume Selling\", description=\"Heavy volume on breakdown, distribution\", date=\"Jun 11 volume spike\"\nBUY_SIGNAL: x=58, y=90, label=\"Volume Recovery\", description=\"Increasing volume on bounce from support\", date=\"Late June volume\"`;\n\n  const llmPrompt = `Please analyze this candlestick chart and provide buy/sell signals organized in logical groups using this EXACT format:\n\nCANDLESTICK_ANALYSIS:\n\nGROUP: [PHASE_NAME]\nPHASE_DESCRIPTION: [Brief description of what's happening in this phase]\nBUY_SIGNAL: x=[0-100], y=[0-100], label=\"[Signal Name]\", description=\"[Technical details]\", date=\"[Time period]\"\nSELL_SIGNAL: x=[0-100], y=[0-100], label=\"[Signal Name]\", description=\"[Technical details]\", date=\"[Time period]\"\nRESISTANCE_LEVEL: x=[0-100], y=[0-100], label=\"[Level Name]\", description=\"[Technical details]\", date=\"[Time period]\"\nSUPPORT_LEVEL: x=[0-100], y=[0-100], label=\"[Level Name]\", description=\"[Technical details]\", date=\"[Time period]\"\n\nIMPORTANT INSTRUCTIONS:\n• Coordinates: x,y are percentages (0-100) from top-left of image\n• x=0 is left edge, x=100 is right edge\n• y=0 is top edge, y=100 is bottom edge\n• Group similar timeframe signals together\n• Typical groups: EARLY_RALLY_PHASE, CONSOLIDATION_PHASE, FAILURE_PHASE, RECOVERY_PHASE, CURRENT_PHASE, VOLUME_CONFIRMATION, BREAKOUT_PHASE, DISTRIBUTION_PHASE\n• Look for: breakouts, reversals, support/resistance bounces, volume spikes\n• Include 3-6 groups with 2-4 signals each for comprehensive analysis\n• Focus on the most significant trading opportunities and key levels\n\nSave your response as a .txt file and upload it to the analyzer.`;\n\n  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        if (e.target?.result) setImage(e.target.result as string);\n        setOverlays([]);\n        setGroupedOverlays({});\n        setParseError('');\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleAnalysisUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        if (e.target?.result) setAnalysisText(e.target.result as string);\n        setParseError('');\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  const parseLLMAnalysis = (text: string): Overlay[] => {\n    try {\n      const lines = text.split('\\n').filter(line => line.trim());\n      const parsedOverlays: Overlay[] = [];\n      const groups: GroupedOverlays = {};\n      let currentGroup = '';\n      let currentPhaseDescription = '';\n      let id = 1;\n\n      lines.forEach((line: string) => {\n        line = line.trim();\n        \n        // Skip headers or empty lines\n        if (line.startsWith('CANDLESTICK_ANALYSIS:') || !line) return;\n\n        // Parse group headers\n        if (line.startsWith('GROUP:')) {\n          currentGroup = line.replace('GROUP:', '').trim();\n          groups[currentGroup] = {\n            description: '',\n            signals: []\n          };\n          return;\n        }\n\n        // Parse phase descriptions\n        if (line.startsWith('PHASE_DESCRIPTION:')) {\n          currentPhaseDescription = line.replace('PHASE_DESCRIPTION:', '').trim();\n          if (currentGroup && groups[currentGroup]) {\n            groups[currentGroup].description = currentPhaseDescription;\n          }\n          return;\n        }\n\n        // Parse signal types\n        let type = '';\n        if (line.startsWith('BUY_SIGNAL:')) {\n          type = 'buy';\n          line = line.replace('BUY_SIGNAL:', '').trim();\n        } else if (line.startsWith('SELL_SIGNAL:')) {\n          type = 'sell';\n          line = line.replace('SELL_SIGNAL:', '').trim();\n        } else if (line.startsWith('RESISTANCE_LEVEL:')) {\n          type = 'resistance';\n          line = line.replace('RESISTANCE_LEVEL:', '').trim();\n        } else if (line.startsWith('SUPPORT_LEVEL:')) {\n          type = 'support';\n          line = line.replace('SUPPORT_LEVEL:', '').trim();\n        } else {\n          return; // Skip unrecognized lines\n        }\n\n        // Parse parameters using regex\n        const xMatch = line.match(/x=(\\d+(?:\\.\\d+)?)/);\n        const yMatch = line.match(/y=(\\d+(?:\\.\\d+)?)/);\n        const labelMatch = line.match(/label=\"([^\"]+)\"/);\n        const descMatch = line.match(/description=\"([^\"]+)\"/);\n        const dateMatch = line.match(/date=\"([^\"]+)\"/);\n\n        if (xMatch && yMatch) {\n          const signal = {\n            id: id++,\n            type: type,\n            x: parseFloat(xMatch[1]),\n            y: parseFloat(yMatch[1]),\n            label: labelMatch ? labelMatch[1] : `${type.toUpperCase()} Signal`,\n            description: descMatch ? descMatch[1] : 'LLM Analysis',\n            date: dateMatch ? dateMatch[1] : 'Auto-detected',\n            group: currentGroup\n          };\n          \n          parsedOverlays.push(signal);\n          \n          if (currentGroup && groups[currentGroup]) {\n            groups[currentGroup].signals.push(signal);\n          }\n        }\n      });\n\n      setGroupedOverlays(groups);\n      return parsedOverlays;\n    } catch (error) {\n      throw new Error(`Parsing failed: ${(error as Error).message}`);\n    }\n  };\n\n  const processLLMAnalysis = () => {\n    try {\n      setParseError('');\n      const parsedOverlays = parseLLMAnalysis(analysisText);\n      \n      if (parsedOverlays.length === 0) {\n        throw new Error('No valid signals found in analysis text');\n      }\n      \n      setOverlays(parsedOverlays);\n      setShowAnalysis(true);\n    } catch (error) {\n      setParseError((error as Error).message);\n    }\n  };\n\n  const loadExampleAnalysis = () => {\n    setAnalysisText(exampleAnalysis);\n  };\n\n  const copyPromptToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(llmPrompt);\n      setCopySuccess(true);\n      setTimeout(() => setCopySuccess(false), 2000);\n    } catch (err) {\n      console.error('Failed to copy text: ', err);\n    }\n  };\n\n  const handleCanvasClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n    if (!image) return;\n\n    const canvas = canvasRef.current; if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    \n    const x = (event.clientX - rect.left) * scaleX;\n    const y = (event.clientY - rect.top) * scaleY;\n    \n    const xPercent = (x / canvas.width) * 100;\n    const yPercent = (y / canvas.height) * 100;\n\n    const newOverlay = {\n      id: Date.now(),\n      type: selectedTool,\n      x: xPercent,\n      y: yPercent,\n      label: `${selectedTool.toUpperCase()} Signal`,\n      description: 'User added marker',\n      date: 'Manual',\n      group: 'MANUAL'\n    };\n\n    setOverlays([...overlays, newOverlay]);\n  };\n\n  const clearAll = () => {\n    setOverlays([]);\n    setGroupedOverlays({});\n    setShowAnalysis(false);\n    setAnalysisText('');\n    setParseError('');\n  };\n\n  const removeOverlay = (id: number) => {\n    setOverlays(overlays.filter(overlay => overlay.id !== id));\n  };\n\n  useEffect(() => {\n    if (image && canvasRef.current) {\n      const canvas = canvasRef.current; if (!canvas) return;\n      const ctx = canvas.getContext('2d'); if (!ctx) return;\n      const img = new Image();\n      \n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n        \n        // Draw overlays\n        overlays.forEach((overlay: Overlay) => {\n          const x = (overlay.x / 100) * canvas.width;\n          const y = (overlay.y / 100) * canvas.height;\n          \n          ctx.save();\n          \n          // Draw marker based on type\n          if (overlay.type === 'buy') {\n            ctx.fillStyle = '#10B981';\n            ctx.strokeStyle = '#065F46';\n            ctx.lineWidth = 2;\n            \n            ctx.beginPath();\n            ctx.moveTo(x, y - 15);\n            ctx.lineTo(x - 8, y - 5);\n            ctx.lineTo(x - 4, y - 5);\n            ctx.lineTo(x - 4, y + 5);\n            ctx.lineTo(x + 4, y + 5);\n            ctx.lineTo(x + 4, y - 5);\n            ctx.lineTo(x + 8, y - 5);\n            ctx.closePath();\n            ctx.fill();\n            ctx.stroke();\n            \n            ctx.fillStyle = 'white';\n            ctx.font = 'bold 10px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText('BUY', x, y + 1);\n            \n          } else if (overlay.type === 'sell') {\n            ctx.fillStyle = '#EF4444';\n            ctx.strokeStyle = '#7F1D1D';\n            ctx.lineWidth = 2;\n            \n            ctx.beginPath();\n            ctx.moveTo(x, y + 15);\n            ctx.lineTo(x - 8, y + 5);\n            ctx.lineTo(x - 4, y + 5);\n            ctx.lineTo(x - 4, y - 5);\n            ctx.lineTo(x + 4, y - 5);\n            ctx.lineTo(x + 4, y + 5);\n            ctx.lineTo(x + 8, y + 5);\n            ctx.closePath();\n            ctx.fill();\n            ctx.stroke();\n            \n            ctx.fillStyle = 'white';\n            ctx.font = 'bold 10px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText('SELL', x, y + 1);\n            \n          } else if (overlay.type === 'resistance' || overlay.type === 'support') {\n            const color = overlay.type === 'resistance' ? '#F59E0B' : '#8B5CF6';\n            ctx.strokeStyle = color;\n            ctx.lineWidth = 3;\n            ctx.setLineDash([10, 5]);\n            \n            ctx.beginPath();\n            ctx.moveTo(0, y);\n            ctx.lineTo(canvas.width, y);\n            ctx.stroke();\n            \n            ctx.fillStyle = color;\n            ctx.font = 'bold 12px Arial';\n            ctx.textAlign = 'left';\n            ctx.setLineDash([]);\n            ctx.fillText(overlay.type.toUpperCase(), x + 10, y - 5);\n          }\n          \n          ctx.restore();\n        });\n      };\n      \n      img.src = image;\n    }\n  }, [image, overlays]);\n\n  const MarkerButton: React.FC<MarkerButtonProps> = ({ type, icon: Icon, label, active }) => (\n    <button\n      onClick={() => setSelectedTool(type)}\n      className={`flex items-center gap-2 px-4 py-2 rounded-lg border transition-colors ${\n        active \n          ? 'bg-blue-100 border-blue-500 text-blue-700' \n          : 'bg-white border-gray-300 hover:bg-gray-50'\n      }`}\n    >\n      <Icon size={16} />\n      {label}\n    </button>\n  );\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6 bg-gray-50 min-h-screen\">\n      <div className=\"bg-white rounded-xl shadow-lg p-6\">\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-2\">\n          🤖 Automated Candlestick Chart Analyzer\n        </h1>\n        <p className=\"text-gray-600 mb-6\">\n          <strong>Workflow:</strong> 1) Copy LLM prompt → 2) Upload chart → 3) Upload analysis → 4) Get overlays\n        </p>\n        {/* Step 1 - LLM Instructions - Always visible */}\n        <div className=\"mb-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n          <h3 className=\"text-lg font-semibold text-yellow-800 mb-3\">🧠 Step 1: LLM Instructions for Chart Analysis</h3>\n          <div className=\"space-y-4\">\n            <p className=\"text-yellow-700\">Copy the prompt below and use it with your favorite LLM (ChatGPT, Claude, etc.):</p>\n            \n            <div className=\"relative\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <p className=\"font-semibold text-yellow-800\">LLM Instructions (Copy this entire prompt):</p>\n                <button\n                  onClick={copyPromptToClipboard}\n                  className=\"flex items-center gap-1 px-3 py-1 bg-yellow-200 text-yellow-800 rounded hover:bg-yellow-300 transition-colors text-sm\"\n                >\n                  {copySuccess ? (\n                    <>\n                      <CheckCircle size={14} />\n                      Copied!\n                    </>\n                  ) : (\n                    <>\n                      <Copy size={14} />\n                      Copy Prompt\n                    </>\n                  )}\n                </button>\n              </div>\n              <textarea\n                ref={promptTextRef}\n                value={llmPrompt}\n                readOnly\n                className=\"w-full h-64 p-3 text-xs font-mono bg-white border border-yellow-300 rounded resize-none overflow-y-auto focus:outline-none focus:ring-2 focus:ring-yellow-400\"\n              />\n            </div>\n            \n            <div className=\"p-3 bg-yellow-100 rounded\">\n              <p className=\"font-semibold text-yellow-800 mb-2\">Usage Instructions:</p>\n              <ol className=\"list-decimal list-inside text-yellow-700 text-sm space-y-1\">\n                <li>Copy the entire prompt above using the Copy button</li>\n                <li>Go to ChatGPT, Claude, or any other LLM</li>\n                <li>Upload your candlestick chart image to the LLM</li>\n                <li>Paste the copied prompt and submit</li>\n                <li>Save the LLM's response as a .txt file</li>\n                <li>Then upload both your chart and the .txt file below</li>\n              </ol>\n            </div>\n          </div>\n        </div>\n\n        {/* Key Benefits Section */}\n        <div className=\"mb-6 p-4 bg-blue-50 rounded-lg\">\n          <h4 className=\"font-semibold text-blue-800 mb-2\">🎯 Key Benefits of Grouped Analysis:</h4>\n          <div className=\"text-sm text-blue-700 space-y-2\">\n            <p><strong>Logical Organization:</strong> Signals are grouped by market phases (Rally, Consolidation, Failure, Recovery, etc.)</p>\n            <p><strong>Better Context:</strong> Each group has a description explaining what's happening in that phase</p>\n            <p><strong>Complete Story:</strong> Shows the full narrative of price action from start to current</p>\n            <p><strong>Strategic Trading:</strong> Helps identify which phase the market is in for better decision making</p>\n            <div className=\"mt-3 p-3 bg-blue-100 rounded\">\n              <p className=\"font-semibold text-blue-800\">Example Groups:</p>\n              <p className=\"text-blue-700\">EARLY_RALLY_PHASE → CONSOLIDATION_PHASE → FAILURE_PHASE → RECOVERY_PHASE → CURRENT_PHASE</p>\n            </div>\n          </div>\n        </div>\n        \n        {/* Upload Sections */}\n        <div className=\"grid md:grid-cols-2 gap-6 mb-6\">\n          {/* Image Upload */}\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">📊 Step 2: Upload Chart Image</h3>\n            <label className=\"flex flex-col items-center justify-center w-full h-32 border-2 border-dashed border-gray-300 rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100\">\n              <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\n                <Upload className=\"w-6 h-6 mb-2 text-gray-500\" />\n                <p className=\"text-sm text-gray-500\">Upload candlestick chart</p>\n                <p className=\"text-xs text-gray-500\">JPEG, PNG supported</p>\n              </div>\n              <input\n                type=\"file\"\n                className=\"hidden\"\n                accept=\"image/*\"\n                onChange={handleImageUpload}\n              />\n            </label>\n          </div>\n\n          {/* Analysis Upload */}\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">🤖 Step 3: Upload LLM Analysis</h3>\n            <label className=\"flex flex-col items-center justify-center w-full h-32 border-2 border-dashed border-green-300 rounded-lg cursor-pointer bg-green-50 hover:bg-green-100\">\n              <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\n                <FileText className=\"w-6 h-6 mb-2 text-green-500\" />\n                <p className=\"text-sm text-green-600\">Upload LLM analysis file</p>\n                <p className=\"text-xs text-green-500\">TXT file with grouped signals</p>\n              </div>\n              <input\n                type=\"file\"\n                className=\"hidden\"\n                accept=\".txt\"\n                onChange={handleAnalysisUpload}\n              />\n            </label>\n          </div>\n        </div>\n\n        {/* Process Button */}\n        {analysisText && image && (\n          <div className=\"mb-6\">\n            <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg mb-4\">\n              <h3 className=\"text-lg font-semibold text-green-800 mb-2\">✅ Step 4: Ready to Generate Overlays</h3>\n              <p className=\"text-green-700 text-sm mb-3\">Both chart and grouped analysis are uploaded. Click below to automatically generate organized buy/sell overlays!</p>\n            </div>\n            <button\n              onClick={processLLMAnalysis}\n              className=\"flex items-center gap-2 px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-semibold\"\n            >\n              <Zap size={20} />\n              🚀 Process Grouped LLM Analysis & Generate Overlays\n            </button>\n            {parseError && (\n              <p className=\"text-red-600 text-sm mt-2\">❌ {parseError}</p>\n            )}\n          </div>\n        )}\n\n        {image && (\n          <>\n            {/* Manual Tools (Optional) */}\n            <div className=\"mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">Manual Tools (Optional):</h3>\n              <div className=\"flex gap-3 flex-wrap\">\n                <MarkerButton\n                  type=\"buy\"\n                  icon={TrendingUp}\n                  label=\"Buy Signal\"\n                  active={selectedTool === 'buy'}\n                />\n                <MarkerButton\n                  type=\"sell\"\n                  icon={TrendingDown}\n                  label=\"Sell Signal\"\n                  active={selectedTool === 'sell'}\n                />\n                <MarkerButton\n                  type=\"resistance\"\n                  icon={Target}\n                  label=\"Support/Resistance\"\n                  active={selectedTool === 'resistance'}\n                />\n                <button\n                  onClick={clearAll}\n                  className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n                >\n                  Clear All\n                </button>\n              </div>\n            </div>\n\n            {/* Chart Canvas */}\n            <div className=\"mb-6\">\n              <canvas\n                ref={canvasRef}\n                onClick={handleCanvasClick}\n                className=\"max-w-full h-auto border border-gray-300 rounded-lg cursor-crosshair shadow-md\"\n                style={{ maxHeight: '600px' }}\n              />\n            </div>\n\n            {/* Grouped Analysis Results */}\n            {Object.keys(groupedOverlays).length > 0 && (\n              <div className=\"bg-gray-50 rounded-lg p-4 mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-700 mb-4\">\n                  📊 Grouped Analysis Results ({overlays.length} total signals)\n                </h3>\n                \n                {Object.entries(groupedOverlays).map(([groupName, groupData]) => (\n                  <div key={groupName} className=\"mb-4 p-4 bg-white rounded-lg border\">\n                    <div className=\"mb-3\">\n                      <h4 className=\"font-bold text-gray-800 text-lg\">{groupName.replace(/_/g, ' ')}</h4>\n                      <p className=\"text-gray-600 text-sm italic\">{groupData.description}</p>\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      {groupData.signals.map((signal: Overlay) => (\n                        <div\n                          key={signal.id}\n                          className=\"flex items-center justify-between bg-gray-50 p-3 rounded border\"\n                        >\n                          <div className=\"flex items-center gap-3\">\n                            <div className={`w-3 h-3 rounded-full ${\n                              signal.type === 'buy' ? 'bg-green-500' :\n                              signal.type === 'sell' ? 'bg-red-500' : \n                              signal.type === 'resistance' ? 'bg-orange-500' : 'bg-purple-500'\n                            }`}></div>\n                            <div>\n                              <span className=\"font-semibold text-gray-800\">\n                                {signal.label}\n                              </span>\n                              <p className=\"text-sm text-gray-600\">\n                                {signal.description} • {signal.date}\n                              </p>\n                              <p className=\"text-xs text-gray-500\">\n                                Position: {signal.x.toFixed(1)}%, {signal.y.toFixed(1)}%\n                              </p>\n                            </div>\n                          </div>\n                          <button\n                            onClick={() => removeOverlay(signal.id)}\n                            className=\"text-red-500 hover:text-red-700 text-sm px-2 py-1 rounded\"\n                          >\n                            Remove\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {/* Regular Analysis Results (for manual or ungrouped signals) */}\n            {overlays.length > 0 && Object.keys(groupedOverlays).length === 0 && (\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">\n                  📊 Analysis Results ({overlays.length} signals detected)\n                </h3>\n                <div className=\"space-y-2\">\n                  {overlays.map((overlay: Overlay) => (\n                    <div\n                      key={overlay.id}\n                      className=\"flex items-center justify-between bg-white p-3 rounded-lg border\"\n                    >\n                      <div className=\"flex items-center gap-3\">\n                        <div className={`w-3 h-3 rounded-full ${\n                          overlay.type === 'buy' ? 'bg-green-500' :\n                          overlay.type === 'sell' ? 'bg-red-500' : \n                          overlay.type === 'resistance' ? 'bg-orange-500' : 'bg-purple-500'\n                        }`}></div>\n                        <div>\n                          <span className=\"font-semibold text-gray-800\">\n                            {overlay.label}\n                          </span>\n                          <p className=\"text-sm text-gray-600\">\n                            {overlay.description} • {overlay.date}\n                          </p>\n                          <p className=\"text-xs text-gray-500\">\n                            Position: {overlay.x.toFixed(1)}%, {overlay.y.toFixed(1)}%\n                          </p>\n                        </div>\n                      </div>\n                      <button\n                        onClick={() => removeOverlay(overlay.id)}\n                        className=\"text-red-500 hover:text-red-700 text-sm px-2 py-1 rounded\"\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CandlestickOverlayAnalyzer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}