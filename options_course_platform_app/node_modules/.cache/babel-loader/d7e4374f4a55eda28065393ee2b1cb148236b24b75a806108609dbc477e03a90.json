{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{Upload,TrendingUp,TrendingDown,Target,FileText,Zap,Copy,CheckCircle}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CandlestickOverlayAnalyzer=()=>{const[image,setImage]=useState(null);const[analysisText,setAnalysisText]=useState('');const[overlays,setOverlays]=useState([]);const[selectedTool,setSelectedTool]=useState('buy');const[showAnalysis,setShowAnalysis]=useState(false);const[parseError,setParseError]=useState('');const[copySuccess,setCopySuccess]=useState(false);const[groupedOverlays,setGroupedOverlays]=useState({});const canvasRef=useRef(null);const promptTextRef=useRef(null);// Updated example with grouped analysis\nconst exampleAnalysis=`CANDLESTICK_ANALYSIS:\n\nGROUP: EARLY_RALLY_PHASE\nPHASE_DESCRIPTION: Initial uptrend and first resistance test (April-May)\nBUY_SIGNAL: x=8, y=35, label=\"Early Rally Buy\", description=\"Breakout above 212 resistance with volume\", date=\"Apr 29 - May 6\"\nBUY_SIGNAL: x=18, y=25, label=\"Major Breakout\", description=\"Explosive move 214→219, strong bullish engulfing\", date=\"2-3 bars after May 13\"\nSELL_SIGNAL: x=25, y=30, label=\"Take Profit Zone\", description=\"Resistance rejection at 219-220 level\", date=\"Around May 20\"\nRESISTANCE_LEVEL: x=20, y=18, label=\"First Resistance\", description=\"219-220 level, multiple rejections\", date=\"May 15-20 period\"\n\nGROUP: CONSOLIDATION_PHASE\nPHASE_DESCRIPTION: Pullback and support formation (Late May-Early June)\nSUPPORT_LEVEL: x=30, y=40, label=\"Pullback Support\", description=\"215-216 area holds, previous resistance becomes support\", date=\"May 28 area\"\nBUY_SIGNAL: x=35, y=25, label=\"Second Rally Attempt\", description=\"Breaking above 218 with volume confirmation\", date=\"2-3 bars after Jun 4\"\n\nGROUP: FAILURE_PHASE\nPHASE_DESCRIPTION: Major reversal and breakdown (Mid June)\nSELL_SIGNAL: x=45, y=20, label=\"Failed Breakout\", description=\"Major reversal from 220, shooting star pattern\", date=\"Around Jun 11\"\nRESISTANCE_LEVEL: x=45, y=15, label=\"Major Resistance\", description=\"220 level proves too strong, heavy selling\", date=\"Jun 11 peak\"\nSELL_SIGNAL: x=50, y=35, label=\"Breakdown Confirmation\", description=\"Close below 215 support, trend break\", date=\"Mid-June decline\"\n\nGROUP: RECOVERY_PHASE\nPHASE_DESCRIPTION: Support hold and new rally (Late June-July)\nSUPPORT_LEVEL: x=55, y=70, label=\"Key Support\", description=\"210 level holds strong, multiple hammer patterns\", date=\"Jun 26 - Jul 5\"\nBUY_SIGNAL: x=58, y=65, label=\"Recovery Buy\", description=\"Bullish engulfing pattern off 210 support\", date=\"2-3 bars after Jun 26\"\nBUY_SIGNAL: x=65, y=45, label=\"Momentum Buy\", description=\"Break above 215, reclaiming previous support\", date=\"Early July\"\n\nGROUP: CURRENT_PHASE\nPHASE_DESCRIPTION: Testing new resistance levels (Recent)\nBUY_SIGNAL: x=75, y=30, label=\"Breakout Buy\", description=\"Push above 220 resistance, volume expansion\", date=\"Jul 11 onwards\"\nRESISTANCE_LEVEL: x=85, y=12, label=\"Current Resistance\", description=\"224-225 area, testing new highs\", date=\"Jul 18 current\"\nSUPPORT_LEVEL: x=75, y=25, label=\"New Support\", description=\"220 level now support, role reversal\", date=\"Current level\"\n\nGROUP: VOLUME_CONFIRMATION\nPHASE_DESCRIPTION: Volume analysis and confirmation signals\nBUY_SIGNAL: x=18, y=80, label=\"Volume Breakout\", description=\"High volume bar confirms major breakout\", date=\"May 15 area volume\"\nSELL_SIGNAL: x=45, y=85, label=\"Volume Selling\", description=\"Heavy volume on breakdown, distribution\", date=\"Jun 11 volume spike\"\nBUY_SIGNAL: x=58, y=90, label=\"Volume Recovery\", description=\"Increasing volume on bounce from support\", date=\"Late June volume\"`;const llmPrompt=`Please analyze this candlestick chart and provide buy/sell signals organized in logical groups using this EXACT format:\n\nCANDLESTICK_ANALYSIS:\n\nGROUP: [PHASE_NAME]\nPHASE_DESCRIPTION: [Brief description of what's happening in this phase]\nBUY_SIGNAL: x=[0-100], y=[0-100], label=\"[Signal Name]\", description=\"[Technical details]\", date=\"[Time period]\"\nSELL_SIGNAL: x=[0-100], y=[0-100], label=\"[Signal Name]\", description=\"[Technical details]\", date=\"[Time period]\"\nRESISTANCE_LEVEL: x=[0-100], y=[0-100], label=\"[Level Name]\", description=\"[Technical details]\", date=\"[Time period]\"\nSUPPORT_LEVEL: x=[0-100], y=[0-100], label=\"[Level Name]\", description=\"[Technical details]\", date=\"[Time period]\"\n\nIMPORTANT INSTRUCTIONS:\n• Coordinates: x,y are percentages (0-100) from top-left of image\n• x=0 is left edge, x=100 is right edge\n• y=0 is top edge, y=100 is bottom edge\n• Group similar timeframe signals together\n• Typical groups: EARLY_RALLY_PHASE, CONSOLIDATION_PHASE, FAILURE_PHASE, RECOVERY_PHASE, CURRENT_PHASE, VOLUME_CONFIRMATION, BREAKOUT_PHASE, DISTRIBUTION_PHASE\n• Look for: breakouts, reversals, support/resistance bounces, volume spikes\n• Include 3-6 groups with 2-4 signals each for comprehensive analysis\n• Focus on the most significant trading opportunities and key levels\n\nSave your response as a .txt file and upload it to the analyzer.`;const handleImageUpload=event=>{var _event$target$files;const file=(_event$target$files=event.target.files)===null||_event$target$files===void 0?void 0:_event$target$files[0];if(file){const reader=new FileReader();reader.onload=e=>{var _e$target;if((_e$target=e.target)!==null&&_e$target!==void 0&&_e$target.result)setImage(e.target.result);setOverlays([]);setGroupedOverlays({});setParseError('');};reader.readAsDataURL(file);}};const handleAnalysisUpload=event=>{var _event$target$files2;const file=(_event$target$files2=event.target.files)===null||_event$target$files2===void 0?void 0:_event$target$files2[0];if(file){const reader=new FileReader();reader.onload=e=>{var _e$target2;if((_e$target2=e.target)!==null&&_e$target2!==void 0&&_e$target2.result)setAnalysisText(e.target.result);setParseError('');};reader.readAsText(file);}};const parseLLMAnalysis=text=>{try{const lines=text.split('\\n').filter(line=>line.trim());const parsedOverlays=[];const groups={};let currentGroup='';let currentPhaseDescription='';let id=1;lines.forEach(line=>{line=line.trim();// Skip headers or empty lines\nif(line.startsWith('CANDLESTICK_ANALYSIS:')||!line)return;// Parse group headers\nif(line.startsWith('GROUP:')){currentGroup=line.replace('GROUP:','').trim();groups[currentGroup]={description:'',signals:[]};return;}// Parse phase descriptions\nif(line.startsWith('PHASE_DESCRIPTION:')){currentPhaseDescription=line.replace('PHASE_DESCRIPTION:','').trim();if(currentGroup&&groups[currentGroup]){groups[currentGroup].description=currentPhaseDescription;}return;}// Parse signal types\nlet type='';if(line.startsWith('BUY_SIGNAL:')){type='buy';line=line.replace('BUY_SIGNAL:','').trim();}else if(line.startsWith('SELL_SIGNAL:')){type='sell';line=line.replace('SELL_SIGNAL:','').trim();}else if(line.startsWith('RESISTANCE_LEVEL:')){type='resistance';line=line.replace('RESISTANCE_LEVEL:','').trim();}else if(line.startsWith('SUPPORT_LEVEL:')){type='support';line=line.replace('SUPPORT_LEVEL:','').trim();}else{return;// Skip unrecognized lines\n}// Parse parameters using regex\nconst xMatch=line.match(/x=(\\d+(?:\\.\\d+)?)/);const yMatch=line.match(/y=(\\d+(?:\\.\\d+)?)/);const labelMatch=line.match(/label=\"([^\"]+)\"/);const descMatch=line.match(/description=\"([^\"]+)\"/);const dateMatch=line.match(/date=\"([^\"]+)\"/);if(xMatch&&yMatch){const signal={id:id++,type:type,x:parseFloat(xMatch[1]),y:parseFloat(yMatch[1]),label:labelMatch?labelMatch[1]:`${type.toUpperCase()} Signal`,description:descMatch?descMatch[1]:'LLM Analysis',date:dateMatch?dateMatch[1]:'Auto-detected',group:currentGroup};parsedOverlays.push(signal);if(currentGroup&&groups[currentGroup]){groups[currentGroup].signals.push(signal);}}});setGroupedOverlays(groups);return parsedOverlays;}catch(error){throw new Error(`Parsing failed: ${error.message}`);}};const processLLMAnalysis=()=>{try{setParseError('');const parsedOverlays=parseLLMAnalysis(analysisText);if(parsedOverlays.length===0){throw new Error('No valid signals found in analysis text');}setOverlays(parsedOverlays);setShowAnalysis(true);}catch(error){setParseError(error.message);}};const loadExampleAnalysis=()=>{setAnalysisText(exampleAnalysis);};const copyPromptToClipboard=async()=>{try{await navigator.clipboard.writeText(llmPrompt);setCopySuccess(true);setTimeout(()=>setCopySuccess(false),2000);}catch(err){console.error('Failed to copy text: ',err);}};const handleCanvasClick=event=>{if(!image)return;const canvas=canvasRef.current;if(!canvas)return;const rect=canvas.getBoundingClientRect();const scaleX=canvas.width/rect.width;const scaleY=canvas.height/rect.height;const x=(event.clientX-rect.left)*scaleX;const y=(event.clientY-rect.top)*scaleY;const xPercent=x/canvas.width*100;const yPercent=y/canvas.height*100;const newOverlay={id:Date.now(),type:selectedTool,x:xPercent,y:yPercent,label:`${selectedTool.toUpperCase()} Signal`,description:'User added marker',date:'Manual',group:'MANUAL'};setOverlays([...overlays,newOverlay]);};const clearAll=()=>{setOverlays([]);setGroupedOverlays({});setShowAnalysis(false);setAnalysisText('');setParseError('');};const removeOverlay=id=>{setOverlays(overlays.filter(overlay=>overlay.id!==id));};useEffect(()=>{if(image&&canvasRef.current){const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext('2d');if(!ctx)return;const img=new Image();img.onload=()=>{canvas.width=img.width;canvas.height=img.height;ctx.drawImage(img,0,0);// Draw overlays\noverlays.forEach(overlay=>{const x=overlay.x/100*canvas.width;const y=overlay.y/100*canvas.height;ctx.save();// Draw marker based on type\nif(overlay.type==='buy'){ctx.fillStyle='#10B981';ctx.strokeStyle='#065F46';ctx.lineWidth=2;ctx.beginPath();ctx.moveTo(x,y-15);ctx.lineTo(x-8,y-5);ctx.lineTo(x-4,y-5);ctx.lineTo(x-4,y+5);ctx.lineTo(x+4,y+5);ctx.lineTo(x+4,y-5);ctx.lineTo(x+8,y-5);ctx.closePath();ctx.fill();ctx.stroke();ctx.fillStyle='white';ctx.font='bold 10px Arial';ctx.textAlign='center';ctx.fillText('BUY',x,y+1);}else if(overlay.type==='sell'){ctx.fillStyle='#EF4444';ctx.strokeStyle='#7F1D1D';ctx.lineWidth=2;ctx.beginPath();ctx.moveTo(x,y+15);ctx.lineTo(x-8,y+5);ctx.lineTo(x-4,y+5);ctx.lineTo(x-4,y-5);ctx.lineTo(x+4,y-5);ctx.lineTo(x+4,y+5);ctx.lineTo(x+8,y+5);ctx.closePath();ctx.fill();ctx.stroke();ctx.fillStyle='white';ctx.font='bold 10px Arial';ctx.textAlign='center';ctx.fillText('SELL',x,y+1);}else if(overlay.type==='resistance'||overlay.type==='support'){const color=overlay.type==='resistance'?'#F59E0B':'#8B5CF6';ctx.strokeStyle=color;ctx.lineWidth=3;ctx.setLineDash([10,5]);ctx.beginPath();ctx.moveTo(0,y);ctx.lineTo(canvas.width,y);ctx.stroke();ctx.fillStyle=color;ctx.font='bold 12px Arial';ctx.textAlign='left';ctx.setLineDash([]);ctx.fillText(overlay.type.toUpperCase(),x+10,y-5);}ctx.restore();});};img.src=image;}},[image,overlays]);const MarkerButton=_ref=>{let{type,icon:Icon,label,active}=_ref;return/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setSelectedTool(type),className:`flex items-center gap-2 px-4 py-2 rounded-lg border transition-colors ${active?'bg-blue-100 border-blue-500 text-blue-700':'bg-white border-gray-300 hover:bg-gray-50'}`,children:[/*#__PURE__*/_jsx(Icon,{size:16}),label]});};return/*#__PURE__*/_jsx(\"div\",{className:\"max-w-6xl mx-auto p-6 bg-gray-50 min-h-screen\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-lg p-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-800 mb-2\",children:\"\\uD83E\\uDD16 Automated Candlestick Chart Analyzer\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600 mb-6\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Workflow:\"}),\" 1) Copy LLM prompt \\u2192 2) Upload chart \\u2192 3) Upload analysis \\u2192 4) Get overlays\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-yellow-800 mb-3\",children:\"\\uD83E\\uDDE0 Step 1: LLM Instructions for Chart Analysis\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-yellow-700\",children:\"Copy the prompt below and use it with your favorite LLM (ChatGPT, Claude, etc.):\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-semibold text-yellow-800\",children:\"LLM Instructions (Copy this entire prompt):\"}),/*#__PURE__*/_jsx(\"button\",{onClick:copyPromptToClipboard,className:\"flex items-center gap-1 px-3 py-1 bg-yellow-200 text-yellow-800 rounded hover:bg-yellow-300 transition-colors text-sm\",children:copySuccess?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CheckCircle,{size:14}),\"Copied!\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Copy,{size:14}),\"Copy Prompt\"]})})]}),/*#__PURE__*/_jsx(\"textarea\",{ref:promptTextRef,value:llmPrompt,readOnly:true,className:\"w-full h-64 p-3 text-xs font-mono bg-white border border-yellow-300 rounded resize-none overflow-y-auto focus:outline-none focus:ring-2 focus:ring-yellow-400\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 bg-yellow-100 rounded\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-semibold text-yellow-800 mb-2\",children:\"Usage Instructions:\"}),/*#__PURE__*/_jsxs(\"ol\",{className:\"list-decimal list-inside text-yellow-700 text-sm space-y-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Copy the entire prompt above using the Copy button\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Go to ChatGPT, Claude, or any other LLM\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Upload your candlestick chart image to the LLM\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Paste the copied prompt and submit\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Save the LLM's response as a .txt file\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Then upload both your chart and the .txt file below\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 p-4 bg-blue-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-blue-800 mb-2\",children:\"\\uD83C\\uDFAF Key Benefits of Grouped Analysis:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-blue-700 space-y-2\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Logical Organization:\"}),\" Signals are grouped by market phases (Rally, Consolidation, Failure, Recovery, etc.)\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Better Context:\"}),\" Each group has a description explaining what's happening in that phase\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Complete Story:\"}),\" Shows the full narrative of price action from start to current\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Strategic Trading:\"}),\" Helps identify which phase the market is in for better decision making\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3 p-3 bg-blue-100 rounded\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-semibold text-blue-800\",children:\"Example Groups:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-blue-700\",children:\"EARLY_RALLY_PHASE \\u2192 CONSOLIDATION_PHASE \\u2192 FAILURE_PHASE \\u2192 RECOVERY_PHASE \\u2192 CURRENT_PHASE\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid md:grid-cols-2 gap-6 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-700 mb-3\",children:\"\\uD83D\\uDCCA Step 2: Upload Chart Image\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex flex-col items-center justify-center w-full h-32 border-2 border-dashed border-gray-300 rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center pt-5 pb-6\",children:[/*#__PURE__*/_jsx(Upload,{className:\"w-6 h-6 mb-2 text-gray-500\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:\"Upload candlestick chart\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:\"JPEG, PNG supported\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"hidden\",accept:\"image/*\",onChange:handleImageUpload})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-700 mb-3\",children:\"\\uD83E\\uDD16 Step 3: Upload LLM Analysis\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex flex-col items-center justify-center w-full h-32 border-2 border-dashed border-green-300 rounded-lg cursor-pointer bg-green-50 hover:bg-green-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center pt-5 pb-6\",children:[/*#__PURE__*/_jsx(FileText,{className:\"w-6 h-6 mb-2 text-green-500\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-green-600\",children:\"Upload LLM analysis file\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-green-500\",children:\"TXT file with grouped signals\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"hidden\",accept:\".txt\",onChange:handleAnalysisUpload})]})]})]}),analysisText&&image&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-green-50 border border-green-200 rounded-lg mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-green-800 mb-2\",children:\"\\u2705 Step 4: Ready to Generate Overlays\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-green-700 text-sm mb-3\",children:\"Both chart and grouped analysis are uploaded. Click below to automatically generate organized buy/sell overlays!\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:processLLMAnalysis,className:\"flex items-center gap-2 px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-semibold\",children:[/*#__PURE__*/_jsx(Zap,{size:20}),\"\\uD83D\\uDE80 Process Grouped LLM Analysis & Generate Overlays\"]}),parseError&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-red-600 text-sm mt-2\",children:[\"\\u274C \",parseError]})]}),image&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-700 mb-3\",children:\"Manual Tools (Optional):\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-3 flex-wrap\",children:[/*#__PURE__*/_jsx(MarkerButton,{type:\"buy\",icon:TrendingUp,label:\"Buy Signal\",active:selectedTool==='buy'}),/*#__PURE__*/_jsx(MarkerButton,{type:\"sell\",icon:TrendingDown,label:\"Sell Signal\",active:selectedTool==='sell'}),/*#__PURE__*/_jsx(MarkerButton,{type:\"resistance\",icon:Target,label:\"Support/Resistance\",active:selectedTool==='resistance'}),/*#__PURE__*/_jsx(\"button\",{onClick:clearAll,className:\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\",children:\"Clear All\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,onClick:handleCanvasClick,className:\"max-w-full h-auto border border-gray-300 rounded-lg cursor-crosshair shadow-md\",style:{maxHeight:'600px'}})}),Object.keys(groupedOverlays).length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-lg p-4 mb-6\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-gray-700 mb-4\",children:[\"\\uD83D\\uDCCA Grouped Analysis Results (\",overlays.length,\" total signals)\"]}),Object.entries(groupedOverlays).map(_ref2=>{let[groupName,groupData]=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-4 bg-white rounded-lg border\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-bold text-gray-800 text-lg\",children:groupName.replace(/_/g,' ')}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 text-sm italic\",children:groupData.description})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:groupData.signals.map(signal=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between bg-gray-50 p-3 rounded border\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:`w-3 h-3 rounded-full ${signal.type==='buy'?'bg-green-500':signal.type==='sell'?'bg-red-500':signal.type==='resistance'?'bg-orange-500':'bg-purple-500'}`}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-gray-800\",children:signal.label}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[signal.description,\" \\u2022 \",signal.date]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500\",children:[\"Position: \",signal.x.toFixed(1),\"%, \",signal.y.toFixed(1),\"%\"]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeOverlay(signal.id),className:\"text-red-500 hover:text-red-700 text-sm px-2 py-1 rounded\",children:\"Remove\"})]},signal.id))})]},groupName);})]}),overlays.length>0&&Object.keys(groupedOverlays).length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 rounded-lg p-4\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-gray-700 mb-3\",children:[\"\\uD83D\\uDCCA Analysis Results (\",overlays.length,\" signals detected)\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:overlays.map(overlay=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between bg-white p-3 rounded-lg border\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:`w-3 h-3 rounded-full ${overlay.type==='buy'?'bg-green-500':overlay.type==='sell'?'bg-red-500':overlay.type==='resistance'?'bg-orange-500':'bg-purple-500'}`}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-gray-800\",children:overlay.label}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[overlay.description,\" \\u2022 \",overlay.date]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500\",children:[\"Position: \",overlay.x.toFixed(1),\"%, \",overlay.y.toFixed(1),\"%\"]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeOverlay(overlay.id),className:\"text-red-500 hover:text-red-700 text-sm px-2 py-1 rounded\",children:\"Remove\"})]},overlay.id))})]})]})]})});};export default CandlestickOverlayAnalyzer;","map":{"version":3,"names":["React","useState","useRef","useEffect","Upload","TrendingUp","TrendingDown","Target","FileText","Zap","Copy","CheckCircle","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CandlestickOverlayAnalyzer","image","setImage","analysisText","setAnalysisText","overlays","setOverlays","selectedTool","setSelectedTool","showAnalysis","setShowAnalysis","parseError","setParseError","copySuccess","setCopySuccess","groupedOverlays","setGroupedOverlays","canvasRef","promptTextRef","exampleAnalysis","llmPrompt","handleImageUpload","event","_event$target$files","file","target","files","reader","FileReader","onload","e","_e$target","result","readAsDataURL","handleAnalysisUpload","_event$target$files2","_e$target2","readAsText","parseLLMAnalysis","text","lines","split","filter","line","trim","parsedOverlays","groups","currentGroup","currentPhaseDescription","id","forEach","startsWith","replace","description","signals","type","xMatch","match","yMatch","labelMatch","descMatch","dateMatch","signal","x","parseFloat","y","label","toUpperCase","date","group","push","error","Error","message","processLLMAnalysis","length","loadExampleAnalysis","copyPromptToClipboard","navigator","clipboard","writeText","setTimeout","err","console","handleCanvasClick","canvas","current","rect","getBoundingClientRect","scaleX","width","scaleY","height","clientX","left","clientY","top","xPercent","yPercent","newOverlay","Date","now","clearAll","removeOverlay","overlay","ctx","getContext","img","Image","drawImage","save","fillStyle","strokeStyle","lineWidth","beginPath","moveTo","lineTo","closePath","fill","stroke","font","textAlign","fillText","color","setLineDash","restore","src","MarkerButton","_ref","icon","Icon","active","onClick","className","children","size","ref","value","readOnly","accept","onChange","style","maxHeight","Object","keys","entries","map","_ref2","groupName","groupData","toFixed"],"sources":["/home/ec2-user/remote_business/options_course_platform/options-course-platform-app/src/candlestick_overlay_analyzer.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Upload, TrendingUp, TrendingDown, Target, FileText, Zap, Copy, CheckCircle } from 'lucide-react';\n\n\ninterface Overlay {\n  id: number;\n  type: string;\n  x: number;\n  y: number;\n  label: string;\n  description: string;\n  date: string;\n  group: string;\n}\n\ninterface GroupData {\n  description: string;\n  signals: Overlay[];\n}\n\ninterface GroupedOverlays {\n  [key: string]: GroupData;\n}\n\ninterface MarkerButtonProps {\n  type: string;\n  icon: React.ElementType;\n  label: string;\n  active: boolean;\n}\nconst CandlestickOverlayAnalyzer = () => {\n  const [image, setImage] = useState<string | null>(null);\n  const [analysisText, setAnalysisText] = useState<string>('');\n  const [overlays, setOverlays] = useState<Overlay[]>([]);\n  const [selectedTool, setSelectedTool] = useState<string>('buy');\n  const [showAnalysis, setShowAnalysis] = useState<boolean>(false);\n  const [parseError, setParseError] = useState<string>('');\n  const [copySuccess, setCopySuccess] = useState<boolean>(false);\n  const [groupedOverlays, setGroupedOverlays] = useState<GroupedOverlays>({});\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const promptTextRef = useRef<HTMLTextAreaElement>(null);\n\n  // Updated example with grouped analysis\n  const exampleAnalysis = `CANDLESTICK_ANALYSIS:\n\nGROUP: EARLY_RALLY_PHASE\nPHASE_DESCRIPTION: Initial uptrend and first resistance test (April-May)\nBUY_SIGNAL: x=8, y=35, label=\"Early Rally Buy\", description=\"Breakout above 212 resistance with volume\", date=\"Apr 29 - May 6\"\nBUY_SIGNAL: x=18, y=25, label=\"Major Breakout\", description=\"Explosive move 214→219, strong bullish engulfing\", date=\"2-3 bars after May 13\"\nSELL_SIGNAL: x=25, y=30, label=\"Take Profit Zone\", description=\"Resistance rejection at 219-220 level\", date=\"Around May 20\"\nRESISTANCE_LEVEL: x=20, y=18, label=\"First Resistance\", description=\"219-220 level, multiple rejections\", date=\"May 15-20 period\"\n\nGROUP: CONSOLIDATION_PHASE\nPHASE_DESCRIPTION: Pullback and support formation (Late May-Early June)\nSUPPORT_LEVEL: x=30, y=40, label=\"Pullback Support\", description=\"215-216 area holds, previous resistance becomes support\", date=\"May 28 area\"\nBUY_SIGNAL: x=35, y=25, label=\"Second Rally Attempt\", description=\"Breaking above 218 with volume confirmation\", date=\"2-3 bars after Jun 4\"\n\nGROUP: FAILURE_PHASE\nPHASE_DESCRIPTION: Major reversal and breakdown (Mid June)\nSELL_SIGNAL: x=45, y=20, label=\"Failed Breakout\", description=\"Major reversal from 220, shooting star pattern\", date=\"Around Jun 11\"\nRESISTANCE_LEVEL: x=45, y=15, label=\"Major Resistance\", description=\"220 level proves too strong, heavy selling\", date=\"Jun 11 peak\"\nSELL_SIGNAL: x=50, y=35, label=\"Breakdown Confirmation\", description=\"Close below 215 support, trend break\", date=\"Mid-June decline\"\n\nGROUP: RECOVERY_PHASE\nPHASE_DESCRIPTION: Support hold and new rally (Late June-July)\nSUPPORT_LEVEL: x=55, y=70, label=\"Key Support\", description=\"210 level holds strong, multiple hammer patterns\", date=\"Jun 26 - Jul 5\"\nBUY_SIGNAL: x=58, y=65, label=\"Recovery Buy\", description=\"Bullish engulfing pattern off 210 support\", date=\"2-3 bars after Jun 26\"\nBUY_SIGNAL: x=65, y=45, label=\"Momentum Buy\", description=\"Break above 215, reclaiming previous support\", date=\"Early July\"\n\nGROUP: CURRENT_PHASE\nPHASE_DESCRIPTION: Testing new resistance levels (Recent)\nBUY_SIGNAL: x=75, y=30, label=\"Breakout Buy\", description=\"Push above 220 resistance, volume expansion\", date=\"Jul 11 onwards\"\nRESISTANCE_LEVEL: x=85, y=12, label=\"Current Resistance\", description=\"224-225 area, testing new highs\", date=\"Jul 18 current\"\nSUPPORT_LEVEL: x=75, y=25, label=\"New Support\", description=\"220 level now support, role reversal\", date=\"Current level\"\n\nGROUP: VOLUME_CONFIRMATION\nPHASE_DESCRIPTION: Volume analysis and confirmation signals\nBUY_SIGNAL: x=18, y=80, label=\"Volume Breakout\", description=\"High volume bar confirms major breakout\", date=\"May 15 area volume\"\nSELL_SIGNAL: x=45, y=85, label=\"Volume Selling\", description=\"Heavy volume on breakdown, distribution\", date=\"Jun 11 volume spike\"\nBUY_SIGNAL: x=58, y=90, label=\"Volume Recovery\", description=\"Increasing volume on bounce from support\", date=\"Late June volume\"`;\n\n  const llmPrompt = `Please analyze this candlestick chart and provide buy/sell signals organized in logical groups using this EXACT format:\n\nCANDLESTICK_ANALYSIS:\n\nGROUP: [PHASE_NAME]\nPHASE_DESCRIPTION: [Brief description of what's happening in this phase]\nBUY_SIGNAL: x=[0-100], y=[0-100], label=\"[Signal Name]\", description=\"[Technical details]\", date=\"[Time period]\"\nSELL_SIGNAL: x=[0-100], y=[0-100], label=\"[Signal Name]\", description=\"[Technical details]\", date=\"[Time period]\"\nRESISTANCE_LEVEL: x=[0-100], y=[0-100], label=\"[Level Name]\", description=\"[Technical details]\", date=\"[Time period]\"\nSUPPORT_LEVEL: x=[0-100], y=[0-100], label=\"[Level Name]\", description=\"[Technical details]\", date=\"[Time period]\"\n\nIMPORTANT INSTRUCTIONS:\n• Coordinates: x,y are percentages (0-100) from top-left of image\n• x=0 is left edge, x=100 is right edge\n• y=0 is top edge, y=100 is bottom edge\n• Group similar timeframe signals together\n• Typical groups: EARLY_RALLY_PHASE, CONSOLIDATION_PHASE, FAILURE_PHASE, RECOVERY_PHASE, CURRENT_PHASE, VOLUME_CONFIRMATION, BREAKOUT_PHASE, DISTRIBUTION_PHASE\n• Look for: breakouts, reversals, support/resistance bounces, volume spikes\n• Include 3-6 groups with 2-4 signals each for comprehensive analysis\n• Focus on the most significant trading opportunities and key levels\n\nSave your response as a .txt file and upload it to the analyzer.`;\n\n  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        if (e.target?.result) setImage(e.target.result as string);\n        setOverlays([]);\n        setGroupedOverlays({});\n        setParseError('');\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleAnalysisUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        if (e.target?.result) setAnalysisText(e.target.result as string);\n        setParseError('');\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  const parseLLMAnalysis = (text: string): Overlay[] => {\n    try {\n      const lines = text.split('\\n').filter(line => line.trim());\n      const parsedOverlays: Overlay[] = [];\n      const groups: GroupedOverlays = {};\n      let currentGroup = '';\n      let currentPhaseDescription = '';\n      let id = 1;\n\n      lines.forEach((line: string) => {\n        line = line.trim();\n        \n        // Skip headers or empty lines\n        if (line.startsWith('CANDLESTICK_ANALYSIS:') || !line) return;\n\n        // Parse group headers\n        if (line.startsWith('GROUP:')) {\n          currentGroup = line.replace('GROUP:', '').trim();\n          groups[currentGroup] = {\n            description: '',\n            signals: []\n          };\n          return;\n        }\n\n        // Parse phase descriptions\n        if (line.startsWith('PHASE_DESCRIPTION:')) {\n          currentPhaseDescription = line.replace('PHASE_DESCRIPTION:', '').trim();\n          if (currentGroup && groups[currentGroup]) {\n            groups[currentGroup].description = currentPhaseDescription;\n          }\n          return;\n        }\n\n        // Parse signal types\n        let type = '';\n        if (line.startsWith('BUY_SIGNAL:')) {\n          type = 'buy';\n          line = line.replace('BUY_SIGNAL:', '').trim();\n        } else if (line.startsWith('SELL_SIGNAL:')) {\n          type = 'sell';\n          line = line.replace('SELL_SIGNAL:', '').trim();\n        } else if (line.startsWith('RESISTANCE_LEVEL:')) {\n          type = 'resistance';\n          line = line.replace('RESISTANCE_LEVEL:', '').trim();\n        } else if (line.startsWith('SUPPORT_LEVEL:')) {\n          type = 'support';\n          line = line.replace('SUPPORT_LEVEL:', '').trim();\n        } else {\n          return; // Skip unrecognized lines\n        }\n\n        // Parse parameters using regex\n        const xMatch = line.match(/x=(\\d+(?:\\.\\d+)?)/);\n        const yMatch = line.match(/y=(\\d+(?:\\.\\d+)?)/);\n        const labelMatch = line.match(/label=\"([^\"]+)\"/);\n        const descMatch = line.match(/description=\"([^\"]+)\"/);\n        const dateMatch = line.match(/date=\"([^\"]+)\"/);\n\n        if (xMatch && yMatch) {\n          const signal = {\n            id: id++,\n            type: type,\n            x: parseFloat(xMatch[1]),\n            y: parseFloat(yMatch[1]),\n            label: labelMatch ? labelMatch[1] : `${type.toUpperCase()} Signal`,\n            description: descMatch ? descMatch[1] : 'LLM Analysis',\n            date: dateMatch ? dateMatch[1] : 'Auto-detected',\n            group: currentGroup\n          };\n          \n          parsedOverlays.push(signal);\n          \n          if (currentGroup && groups[currentGroup]) {\n            groups[currentGroup].signals.push(signal);\n          }\n        }\n      });\n\n      setGroupedOverlays(groups);\n      return parsedOverlays;\n    } catch (error) {\n      throw new Error(`Parsing failed: ${(error as Error).message}`);\n    }\n  };\n\n  const processLLMAnalysis = () => {\n    try {\n      setParseError('');\n      const parsedOverlays = parseLLMAnalysis(analysisText);\n      \n      if (parsedOverlays.length === 0) {\n        throw new Error('No valid signals found in analysis text');\n      }\n      \n      setOverlays(parsedOverlays);\n      setShowAnalysis(true);\n    } catch (error) {\n      setParseError((error as Error).message);\n    }\n  };\n\n  const loadExampleAnalysis = () => {\n    setAnalysisText(exampleAnalysis);\n  };\n\n  const copyPromptToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(llmPrompt);\n      setCopySuccess(true);\n      setTimeout(() => setCopySuccess(false), 2000);\n    } catch (err) {\n      console.error('Failed to copy text: ', err);\n    }\n  };\n\n  const handleCanvasClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n    if (!image) return;\n\n    const canvas = canvasRef.current; if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    \n    const x = (event.clientX - rect.left) * scaleX;\n    const y = (event.clientY - rect.top) * scaleY;\n    \n    const xPercent = (x / canvas.width) * 100;\n    const yPercent = (y / canvas.height) * 100;\n\n    const newOverlay = {\n      id: Date.now(),\n      type: selectedTool,\n      x: xPercent,\n      y: yPercent,\n      label: `${selectedTool.toUpperCase()} Signal`,\n      description: 'User added marker',\n      date: 'Manual',\n      group: 'MANUAL'\n    };\n\n    setOverlays([...overlays, newOverlay]);\n  };\n\n  const clearAll = () => {\n    setOverlays([]);\n    setGroupedOverlays({});\n    setShowAnalysis(false);\n    setAnalysisText('');\n    setParseError('');\n  };\n\n  const removeOverlay = (id: number) => {\n    setOverlays(overlays.filter(overlay => overlay.id !== id));\n  };\n\n  useEffect(() => {\n    if (image && canvasRef.current) {\n      const canvas = canvasRef.current; if (!canvas) return;\n      const ctx = canvas.getContext('2d'); if (!ctx) return;\n      const img = new Image();\n      \n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n        \n        // Draw overlays\n        overlays.forEach((overlay: Overlay) => {\n          const x = (overlay.x / 100) * canvas.width;\n          const y = (overlay.y / 100) * canvas.height;\n          \n          ctx.save();\n          \n          // Draw marker based on type\n          if (overlay.type === 'buy') {\n            ctx.fillStyle = '#10B981';\n            ctx.strokeStyle = '#065F46';\n            ctx.lineWidth = 2;\n            \n            ctx.beginPath();\n            ctx.moveTo(x, y - 15);\n            ctx.lineTo(x - 8, y - 5);\n            ctx.lineTo(x - 4, y - 5);\n            ctx.lineTo(x - 4, y + 5);\n            ctx.lineTo(x + 4, y + 5);\n            ctx.lineTo(x + 4, y - 5);\n            ctx.lineTo(x + 8, y - 5);\n            ctx.closePath();\n            ctx.fill();\n            ctx.stroke();\n            \n            ctx.fillStyle = 'white';\n            ctx.font = 'bold 10px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText('BUY', x, y + 1);\n            \n          } else if (overlay.type === 'sell') {\n            ctx.fillStyle = '#EF4444';\n            ctx.strokeStyle = '#7F1D1D';\n            ctx.lineWidth = 2;\n            \n            ctx.beginPath();\n            ctx.moveTo(x, y + 15);\n            ctx.lineTo(x - 8, y + 5);\n            ctx.lineTo(x - 4, y + 5);\n            ctx.lineTo(x - 4, y - 5);\n            ctx.lineTo(x + 4, y - 5);\n            ctx.lineTo(x + 4, y + 5);\n            ctx.lineTo(x + 8, y + 5);\n            ctx.closePath();\n            ctx.fill();\n            ctx.stroke();\n            \n            ctx.fillStyle = 'white';\n            ctx.font = 'bold 10px Arial';\n            ctx.textAlign = 'center';\n            ctx.fillText('SELL', x, y + 1);\n            \n          } else if (overlay.type === 'resistance' || overlay.type === 'support') {\n            const color = overlay.type === 'resistance' ? '#F59E0B' : '#8B5CF6';\n            ctx.strokeStyle = color;\n            ctx.lineWidth = 3;\n            ctx.setLineDash([10, 5]);\n            \n            ctx.beginPath();\n            ctx.moveTo(0, y);\n            ctx.lineTo(canvas.width, y);\n            ctx.stroke();\n            \n            ctx.fillStyle = color;\n            ctx.font = 'bold 12px Arial';\n            ctx.textAlign = 'left';\n            ctx.setLineDash([]);\n            ctx.fillText(overlay.type.toUpperCase(), x + 10, y - 5);\n          }\n          \n          ctx.restore();\n        });\n      };\n      \n      img.src = image;\n    }\n  }, [image, overlays]);\n\n  const MarkerButton: React.FC<MarkerButtonProps> = ({ type, icon: Icon, label, active }) => (\n    <button\n      onClick={() => setSelectedTool(type)}\n      className={`flex items-center gap-2 px-4 py-2 rounded-lg border transition-colors ${\n        active \n          ? 'bg-blue-100 border-blue-500 text-blue-700' \n          : 'bg-white border-gray-300 hover:bg-gray-50'\n      }`}\n    >\n      <Icon size={16} />\n      {label}\n    </button>\n  );\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6 bg-gray-50 min-h-screen\">\n      <div className=\"bg-white rounded-xl shadow-lg p-6\">\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-2\">\n          🤖 Automated Candlestick Chart Analyzer\n        </h1>\n        <p className=\"text-gray-600 mb-6\">\n          <strong>Workflow:</strong> 1) Copy LLM prompt → 2) Upload chart → 3) Upload analysis → 4) Get overlays\n        </p>\n        {/* Step 1 - LLM Instructions - Always visible */}\n        <div className=\"mb-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n          <h3 className=\"text-lg font-semibold text-yellow-800 mb-3\">🧠 Step 1: LLM Instructions for Chart Analysis</h3>\n          <div className=\"space-y-4\">\n            <p className=\"text-yellow-700\">Copy the prompt below and use it with your favorite LLM (ChatGPT, Claude, etc.):</p>\n            \n            <div className=\"relative\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <p className=\"font-semibold text-yellow-800\">LLM Instructions (Copy this entire prompt):</p>\n                <button\n                  onClick={copyPromptToClipboard}\n                  className=\"flex items-center gap-1 px-3 py-1 bg-yellow-200 text-yellow-800 rounded hover:bg-yellow-300 transition-colors text-sm\"\n                >\n                  {copySuccess ? (\n                    <>\n                      <CheckCircle size={14} />\n                      Copied!\n                    </>\n                  ) : (\n                    <>\n                      <Copy size={14} />\n                      Copy Prompt\n                    </>\n                  )}\n                </button>\n              </div>\n              <textarea\n                ref={promptTextRef}\n                value={llmPrompt}\n                readOnly\n                className=\"w-full h-64 p-3 text-xs font-mono bg-white border border-yellow-300 rounded resize-none overflow-y-auto focus:outline-none focus:ring-2 focus:ring-yellow-400\"\n              />\n            </div>\n            \n            <div className=\"p-3 bg-yellow-100 rounded\">\n              <p className=\"font-semibold text-yellow-800 mb-2\">Usage Instructions:</p>\n              <ol className=\"list-decimal list-inside text-yellow-700 text-sm space-y-1\">\n                <li>Copy the entire prompt above using the Copy button</li>\n                <li>Go to ChatGPT, Claude, or any other LLM</li>\n                <li>Upload your candlestick chart image to the LLM</li>\n                <li>Paste the copied prompt and submit</li>\n                <li>Save the LLM's response as a .txt file</li>\n                <li>Then upload both your chart and the .txt file below</li>\n              </ol>\n            </div>\n          </div>\n        </div>\n\n        {/* Key Benefits Section */}\n        <div className=\"mb-6 p-4 bg-blue-50 rounded-lg\">\n          <h4 className=\"font-semibold text-blue-800 mb-2\">🎯 Key Benefits of Grouped Analysis:</h4>\n          <div className=\"text-sm text-blue-700 space-y-2\">\n            <p><strong>Logical Organization:</strong> Signals are grouped by market phases (Rally, Consolidation, Failure, Recovery, etc.)</p>\n            <p><strong>Better Context:</strong> Each group has a description explaining what's happening in that phase</p>\n            <p><strong>Complete Story:</strong> Shows the full narrative of price action from start to current</p>\n            <p><strong>Strategic Trading:</strong> Helps identify which phase the market is in for better decision making</p>\n            <div className=\"mt-3 p-3 bg-blue-100 rounded\">\n              <p className=\"font-semibold text-blue-800\">Example Groups:</p>\n              <p className=\"text-blue-700\">EARLY_RALLY_PHASE → CONSOLIDATION_PHASE → FAILURE_PHASE → RECOVERY_PHASE → CURRENT_PHASE</p>\n            </div>\n          </div>\n        </div>\n        \n        {/* Upload Sections */}\n        <div className=\"grid md:grid-cols-2 gap-6 mb-6\">\n          {/* Image Upload */}\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">📊 Step 2: Upload Chart Image</h3>\n            <label className=\"flex flex-col items-center justify-center w-full h-32 border-2 border-dashed border-gray-300 rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100\">\n              <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\n                <Upload className=\"w-6 h-6 mb-2 text-gray-500\" />\n                <p className=\"text-sm text-gray-500\">Upload candlestick chart</p>\n                <p className=\"text-xs text-gray-500\">JPEG, PNG supported</p>\n              </div>\n              <input\n                type=\"file\"\n                className=\"hidden\"\n                accept=\"image/*\"\n                onChange={handleImageUpload}\n              />\n            </label>\n          </div>\n\n          {/* Analysis Upload */}\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">🤖 Step 3: Upload LLM Analysis</h3>\n            <label className=\"flex flex-col items-center justify-center w-full h-32 border-2 border-dashed border-green-300 rounded-lg cursor-pointer bg-green-50 hover:bg-green-100\">\n              <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\n                <FileText className=\"w-6 h-6 mb-2 text-green-500\" />\n                <p className=\"text-sm text-green-600\">Upload LLM analysis file</p>\n                <p className=\"text-xs text-green-500\">TXT file with grouped signals</p>\n              </div>\n              <input\n                type=\"file\"\n                className=\"hidden\"\n                accept=\".txt\"\n                onChange={handleAnalysisUpload}\n              />\n            </label>\n          </div>\n        </div>\n\n        {/* Process Button */}\n        {analysisText && image && (\n          <div className=\"mb-6\">\n            <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg mb-4\">\n              <h3 className=\"text-lg font-semibold text-green-800 mb-2\">✅ Step 4: Ready to Generate Overlays</h3>\n              <p className=\"text-green-700 text-sm mb-3\">Both chart and grouped analysis are uploaded. Click below to automatically generate organized buy/sell overlays!</p>\n            </div>\n            <button\n              onClick={processLLMAnalysis}\n              className=\"flex items-center gap-2 px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-semibold\"\n            >\n              <Zap size={20} />\n              🚀 Process Grouped LLM Analysis & Generate Overlays\n            </button>\n            {parseError && (\n              <p className=\"text-red-600 text-sm mt-2\">❌ {parseError}</p>\n            )}\n          </div>\n        )}\n\n        {image && (\n          <>\n            {/* Manual Tools (Optional) */}\n            <div className=\"mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">Manual Tools (Optional):</h3>\n              <div className=\"flex gap-3 flex-wrap\">\n                <MarkerButton\n                  type=\"buy\"\n                  icon={TrendingUp}\n                  label=\"Buy Signal\"\n                  active={selectedTool === 'buy'}\n                />\n                <MarkerButton\n                  type=\"sell\"\n                  icon={TrendingDown}\n                  label=\"Sell Signal\"\n                  active={selectedTool === 'sell'}\n                />\n                <MarkerButton\n                  type=\"resistance\"\n                  icon={Target}\n                  label=\"Support/Resistance\"\n                  active={selectedTool === 'resistance'}\n                />\n                <button\n                  onClick={clearAll}\n                  className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n                >\n                  Clear All\n                </button>\n              </div>\n            </div>\n\n            {/* Chart Canvas */}\n            <div className=\"mb-6\">\n              <canvas\n                ref={canvasRef}\n                onClick={handleCanvasClick}\n                className=\"max-w-full h-auto border border-gray-300 rounded-lg cursor-crosshair shadow-md\"\n                style={{ maxHeight: '600px' }}\n              />\n            </div>\n\n            {/* Grouped Analysis Results */}\n            {Object.keys(groupedOverlays).length > 0 && (\n              <div className=\"bg-gray-50 rounded-lg p-4 mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-700 mb-4\">\n                  📊 Grouped Analysis Results ({overlays.length} total signals)\n                </h3>\n                \n                {Object.entries(groupedOverlays).map(([groupName, groupData]) => (\n                  <div key={groupName} className=\"mb-4 p-4 bg-white rounded-lg border\">\n                    <div className=\"mb-3\">\n                      <h4 className=\"font-bold text-gray-800 text-lg\">{groupName.replace(/_/g, ' ')}</h4>\n                      <p className=\"text-gray-600 text-sm italic\">{groupData.description}</p>\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      {groupData.signals.map((signal: Overlay) => (\n                        <div\n                          key={signal.id}\n                          className=\"flex items-center justify-between bg-gray-50 p-3 rounded border\"\n                        >\n                          <div className=\"flex items-center gap-3\">\n                            <div className={`w-3 h-3 rounded-full ${\n                              signal.type === 'buy' ? 'bg-green-500' :\n                              signal.type === 'sell' ? 'bg-red-500' : \n                              signal.type === 'resistance' ? 'bg-orange-500' : 'bg-purple-500'\n                            }`}></div>\n                            <div>\n                              <span className=\"font-semibold text-gray-800\">\n                                {signal.label}\n                              </span>\n                              <p className=\"text-sm text-gray-600\">\n                                {signal.description} • {signal.date}\n                              </p>\n                              <p className=\"text-xs text-gray-500\">\n                                Position: {signal.x.toFixed(1)}%, {signal.y.toFixed(1)}%\n                              </p>\n                            </div>\n                          </div>\n                          <button\n                            onClick={() => removeOverlay(signal.id)}\n                            className=\"text-red-500 hover:text-red-700 text-sm px-2 py-1 rounded\"\n                          >\n                            Remove\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {/* Regular Analysis Results (for manual or ungrouped signals) */}\n            {overlays.length > 0 && Object.keys(groupedOverlays).length === 0 && (\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">\n                  📊 Analysis Results ({overlays.length} signals detected)\n                </h3>\n                <div className=\"space-y-2\">\n                  {overlays.map((overlay: Overlay) => (\n                    <div\n                      key={overlay.id}\n                      className=\"flex items-center justify-between bg-white p-3 rounded-lg border\"\n                    >\n                      <div className=\"flex items-center gap-3\">\n                        <div className={`w-3 h-3 rounded-full ${\n                          overlay.type === 'buy' ? 'bg-green-500' :\n                          overlay.type === 'sell' ? 'bg-red-500' : \n                          overlay.type === 'resistance' ? 'bg-orange-500' : 'bg-purple-500'\n                        }`}></div>\n                        <div>\n                          <span className=\"font-semibold text-gray-800\">\n                            {overlay.label}\n                          </span>\n                          <p className=\"text-sm text-gray-600\">\n                            {overlay.description} • {overlay.date}\n                          </p>\n                          <p className=\"text-xs text-gray-500\">\n                            Position: {overlay.x.toFixed(1)}%, {overlay.y.toFixed(1)}%\n                          </p>\n                        </div>\n                      </div>\n                      <button\n                        onClick={() => removeOverlay(overlay.id)}\n                        className=\"text-red-500 hover:text-red-700 text-sm px-2 py-1 rounded\"\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CandlestickOverlayAnalyzer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}