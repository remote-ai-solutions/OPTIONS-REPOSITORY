name: Auto-Generate README for OPTIONS Platform
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'options_course_platform_app/**'

permissions:
  contents: write

jobs:
  generate-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Analyze project structure and generate README
        run: |
          echo "📋 Analyzing OPTIONS Course Platform structure..."
          
          # Navigate to the project folder
          cd options_course_platform_app
          
          # Extract project information
          PROJECT_NAME=$(node -p "require('./package.json').name" 2>/dev/null || echo "OPTIONS Course Platform")
          PROJECT_VERSION=$(node -p "require('./package.json').version" 2>/dev/null || echo "1.0.0")
          PROJECT_DESCRIPTION=$(node -p "require('./package.json').description" 2>/dev/null || echo "AI-powered OPTIONS trading course platform")
          
          # Check for React and other dependencies
          DEPENDENCIES=$(node -p "Object.keys(require('./package.json').dependencies || {}).join(', ')" 2>/dev/null || echo "React.js, TypeScript")
          
          # Check available scripts
          SCRIPTS=$(node -p "Object.keys(require('./package.json').scripts || {}).join(', ')" 2>/dev/null || echo "start, build, test")
          
          # Analyze folder structure
          FOLDER_STRUCTURE=$(find . -maxdepth 2 -type d -not -path '*/node_modules*' -not -path '*/.git*' | sort)
          
          # Count files by type
          JS_FILES=$(find ./src -name "*.js" -o -name "*.jsx" -o -name "*.ts" -o -name "*.tsx" 2>/dev/null | wc -l)
          CSS_FILES=$(find . -name "*.css" -o -name "*.scss" -o -name "*.sass" 2>/dev/null | wc -l)
          
          # Go back to root
          cd ..
          
          # Generate comprehensive README.md
          cat > README.md << 'EOF'
          # 🚀 OPTIONS Course Platform
          
          ![Platform Status](https://img.shields.io/badge/Status-Live-brightgreen)
          ![Version](https://img.shields.io/badge/Version-1.0.0-blue)
          ![React](https://img.shields.io/badge/React-18+-61DAFB?logo=react)
          ![TypeScript](https://img.shields.io/badge/TypeScript-Latest-3178C6?logo=typescript)
          
          **AI-Powered Options Trading Education Platform** - A comprehensive React.js application for learning options trading strategies, market analysis, and risk management.
          
          ## 🌐 Live Demo
          
          **🔗 [OPTIONS Course Platform - Live](https://remote-ai-solutions.github.io/OPTIONS-REPOSITORY)**
          
          *Fully hosted on GitHub Pages with global CDN delivery*
          
          ## 📊 Platform Overview
          
          The OPTIONS Course Platform is a cutting-edge educational tool designed to teach options trading through:
          
          - **📈 Interactive Market Analysis** - Real-time candlestick pattern recognition
          - **🧮 Options Calculators** - Advanced pricing and risk assessment tools  
          - **📚 Educational Content** - Comprehensive trading course materials
          - **🎯 Strategy Simulators** - Practice trading without financial risk
          - **📱 Responsive Design** - Works on desktop, tablet, and mobile devices
          
          ## 🏗️ Technical Architecture
          
          ```
          Frontend: React.js + TypeScript
          Styling: Tailwind CSS + Custom Components
          Build Tool: Create React App + Custom Scripts
          Hosting: GitHub Pages (Static Hosting)
          Security: AWS OIDC + GitHub Actions
          ```
          
          ## 🚀 Quick Start
          
          ### Prerequisites
          - Node.js 18+ installed
          - Git installed
          
          ### Local Development
          ```bash
          # Clone the repository
          git clone https://github.com/remote-ai-solutions/OPTIONS-REPOSITORY.git
          cd OPTIONS-REPOSITORY/options_course_platform_app
          
          # Install dependencies
          npm install
          
          # Start development server
          npm start
          # OR use the provided script
          chmod +x start_server.sh
          ./start_server.sh
          
          # Open in browser
          # http://localhost:3000
          ```
          
          ### Production Build
          ```bash
          # Build for production
          npm run build
          
          # Serve locally (optional)
          npm install -g serve
          serve -s build
          ```
          
          ## 📁 Project Structure
          
          ```
          OPTIONS-REPOSITORY/
          ├── 📂 .github/workflows/           # GitHub Actions automation
          │   ├── deploy-s3-extract.yml      # S3 extraction workflow  
          │   └── deploy-pages.yml           # GitHub Pages deployment
          ├── 📂 options_course_platform_app/ # Main React application
          │   ├── 📂 build/                  # Production build output
          │   ├── 📂 src/                    # Source code
          │   │   ├── OptionsCoursePlatform.tsx
          │   │   ├── candlestick_overlay_analyzer.tsx
          │   │   └── (additional components)
          │   ├── 📂 public/                 # Static assets
          │   ├── 📂 node_modules/           # Dependencies
          │   ├── package.json               # Project configuration
          │   ├── tsconfig.json             # TypeScript configuration
          │   ├── tailwind.config.js        # Tailwind CSS configuration
          │   ├── start_server.sh           # Local server script
          │   └── stop_server.sh            # Stop server script
          └── README.md                      # This file
          ```
          
          ## 🛠️ Available Scripts
          
          In the `options_course_platform_app` directory:
          
          | Script | Command | Description |
          |--------|---------|-------------|
          | **Development** | `npm start` | Starts development server |
          | **Build** | `npm run build` | Creates production build |
          | **Test** | `npm test` | Runs test suite |
          | **Eject** | `npm run eject` | Ejects from Create React App |
          | **Local Server** | `./start_server.sh` | Custom server start script |
          | **Stop Server** | `./stop_server.sh` | Stop local server |
          
          ## 🔧 Key Features
          
          ### 📊 Market Analysis Tools
          - **Candlestick Pattern Recognition** - AI-powered pattern detection
          - **Technical Indicators** - Moving averages, RSI, MACD analysis
          - **Options Chain Analysis** - Real-time options data visualization
          - **Volatility Assessment** - Market volatility calculations
          
          ### 🎓 Educational Components
          - **Interactive Tutorials** - Step-by-step trading lessons
          - **Risk Management** - Position sizing and risk assessment
          - **Strategy Guides** - Comprehensive options strategies
          - **Market Psychology** - Behavioral trading insights
          
          ### 🧮 Calculation Tools
          - **Options Pricing Models** - Black-Scholes and Binomial models
          - **Greeks Calculator** - Delta, Gamma, Theta, Vega analysis
          - **Profit/Loss Visualizer** - Strategy outcome projections
          - **Portfolio Analyzer** - Risk and return optimization
          
          ## 🚀 Deployment
          
          ### Automatic Deployment
          The platform uses GitHub Actions for automated deployment:
          
          1. **Code changes** pushed to `options_course_platform_app/` folder
          2. **GitHub Actions** automatically builds the React app
          3. **GitHub Pages** deploys the production build
          4. **Live site** updates within minutes
          
          ### Manual Deployment
          ```bash
          # Trigger deployment workflow
          # Go to: GitHub Actions → "Deploy OPTIONS Platform to GitHub Pages"
          # Click: "Run workflow"
          ```
          
          ## 🔒 Security & Architecture
          
          - **🔐 AWS OIDC Authentication** - No stored AWS credentials
          - **🛡️ Secure S3 Integration** - Read-only access with least privilege
          - **🌐 GitHub Pages Hosting** - Enterprise-grade static hosting
          - **📱 Progressive Web App** - Optimized for all devices
          - **⚡ Global CDN** - Fast loading worldwide
          
          ## 🤝 Contributing
          
          This is a private educational platform for the remote-ai-solutions organization. 
          
          ### Development Workflow
          1. **Clone repository** and create feature branch
          2. **Make changes** in `options_course_platform_app/` folder
          3. **Test locally** with `npm start`
          4. **Commit changes** and push to main branch
          5. **Automatic deployment** via GitHub Actions
          
          ## 📈 Performance
          
          - **⚡ Fast Loading** - Optimized React build with code splitting
          - **📱 Mobile Responsive** - Works seamlessly on all devices  
          - **🌐 Global CDN** - GitHub Pages worldwide distribution
          - **🔍 SEO Optimized** - Proper meta tags and structure
          - **♿ Accessible** - WCAG compliance for inclusive design
          
          ## 🆘 Support & Documentation
          
          - **📖 Trading Guides** - Built into the platform interface
          - **🎥 Video Tutorials** - Embedded educational content
          - **💬 Community** - Options trading discussions and support
          - **📧 Contact** - Platform feedback and technical support
          
          ## 📜 License
          
          This project is proprietary software owned by remote-ai-solutions organization.
          
          ---
          
          **🌟 Built with React.js, TypeScript, and Tailwind CSS**  
          **🚀 Deployed with GitHub Actions and GitHub Pages**  
          **🔒 Secured with AWS OIDC Authentication**
          
          ---
          
          *Last updated: $(date '+%B %d, %Y') via automated README generation*
          EOF
          
          echo "✅ README.md generated successfully!"
          echo "📄 README contains comprehensive platform documentation"
      
      - name: Commit updated README
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Actions (Auto-README)"
          
          git add README.md
          
          if ! git diff --staged --quiet; then
            git commit -m "📋 Auto-generate comprehensive README for OPTIONS Platform
            
            ✅ Added platform overview and features
            ✅ Included live demo link
            ✅ Added technical architecture details
            ✅ Provided setup and deployment instructions
            ✅ Generated automatically from project structure"
            
            git push origin main
            
            echo "✅ README.md updated and committed!"
            echo "📋 Repository now has comprehensive documentation"
          else
            echo "ℹ️ README.md already up to date"
          fi
